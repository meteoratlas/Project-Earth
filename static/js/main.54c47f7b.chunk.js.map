{"version":3,"sources":["resources/bg1.png","resources/sparkles.svg","components/ui/triangle.svg","components/ui/selectOpt.js","components/ui/redo.svg","components/ui/undo.svg","components/ui/reflect.svg","components/ui/TransTable.js","components/ui/TestMenu.js","logic/Util.js","pixi/Triangle.js","pixi/Transition.js","pixi/Message.js","pixi/Grid.js","pixi/GridNumbers.js","pixi/Goal.js","logic/Transforms.js","pixi/BgAnimation.js","pixi/Conffeti.js","pixi/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","id","_ref3","xlinkHref","opacity","fill","fillOpacity","stroke","strokeWidth","strokeOpacity","_ref","svgRef","title","props","preserveAspectRatio","viewBox","width","height","ref","ForwardRef","forwardRef","OptionComp","num","push","map","value","index","className","Component","TransTable","createTable","table","limitMove","TestMenu","timeout","ms","Promise","resolve","setTimeout","sendInput","e","a","async","commands","each","command","moves","amount","rotates","reflects","addToTable","detail","nextAvailIndex","alert","Number","unitsMove","document","getElementsByClassName","textContent","toggleVisible","setState","prev","hidden","clearTable","state","alt","onClick","input","Util","coords","n","playerCoords","goalCoords","_","chunk","differenceWith","isEqual","isEmpty","gridMax","every","Math","abs","px","py","x1","y1","x2","y2","x3","y3","origArea","HORIZONTAL","VERTICAL","Triangle","x","y","boardSize","cellSize","allowMove","animateSpeed","newCoords","onComplete","gsap","to","0","1","2","3","4","5","duration","ease","c","localToWorld","size","clear","beginFill","lineStyle","moveTo","lineTo","closePath","endFill","PIXI","Transition","tris","triWidth","triHeight","time","delay","drawRect","callback","Message","message","targetY","w","style","fontFamily","fontSize","fontStyle","fontWeight","strokeThickness","dropShadow","dropShadowColor","dropShadowBlur","dropShadowAngle","PI","dropShadowDistance","wordWrap","wordWrapWidth","text","addChild","Grid","count","GridNumbers","centreX","centreY","numbers","t","align","resolution","bubble","drawCircle","visOffset","cacheAsBitmap","Goal","draw","Transforms","dx","dy","concat","angle","originX","originY","angleSin","sin","angleCos","cos","copy","round","b","aSq","bSq","CreateStars","offset","star","from","sparkles","scale","delta","position","set","alpha","Conffeti","ticks","createPiece","random","children","rand","Game","app","onMoveComplete","checkIfInGrid","tri","allowInput","setText","loadLevel","currentLevel","levels","toggleUI","entities","pointInTri","checkWin","goal","levelComplete","undefined","transition","conffeti","star1","star2","star3","root","bg","bg1","zIndex","container","stage","grid","gridNums","totalGridSize","screen","pivot","ticker","add","animateStars","animateConfetti","translate","setCoordinates","oX","oY","rotate","reflect","levelIndex","json","transitionOut","setCoords","transitionIn","resetTable","App","move","game","sendResetTableMsg","UIRef","current","toggleUIVisible","canvasRef","React","createRef","canvas","backgroundColor","view","window","devicePixelRatio","start","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54c47f7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg1.c945766e.png\";","module.exports = __webpack_public_path__ + \"static/media/sparkles.70d4327a.svg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"path\", {\n  d: \"M37.67 24.24C36.81 24.72 36.28 25.63 36.28 26.6C36.28 28.91 36.28 47.32 36.28 49.62C36.28 51.12 37.5 52.34 39 52.34C40.49 52.34 41.71 51.12 41.71 49.62C41.71 48.41 41.71 42.34 41.71 31.41C43.71 32.63 53.7 38.7 71.69 49.62C53.7 60.55 43.71 66.62 41.71 67.83C41.71 63.41 41.71 60.95 41.71 60.46C41.71 58.96 40.49 57.75 39 57.75C37.5 57.75 36.28 58.96 36.28 60.46C36.28 61.68 36.28 71.43 36.28 72.65C36.28 73.62 36.81 74.53 37.67 75.01C38.08 75.24 38.54 75.35 39 75.35C39.48 75.35 39.97 75.22 40.4 74.96C44.2 72.66 74.52 54.24 78.32 51.94C79.12 51.44 79.62 50.57 79.62 49.62C79.62 48.68 79.12 47.8 78.32 47.31C70.73 42.71 44.2 26.59 40.4 24.28C39.56 23.78 38.52 23.76 37.67 24.24Z\",\n  id: \"e2h5KiJIj\"\n}), React.createElement(\"path\", {\n  d: \"M37.67 24.24C36.81 24.72 36.28 25.63 36.28 26.6C36.28 28.91 36.28 47.32 36.28 49.62C36.28 51.12 37.5 52.34 39 52.34C40.49 52.34 41.71 51.12 41.71 49.62C41.71 48.41 41.71 42.34 41.71 31.41C43.71 32.63 53.7 38.7 71.69 49.62C53.7 60.55 43.71 66.62 41.71 67.83C41.71 63.41 41.71 60.95 41.71 60.46C41.71 58.96 40.49 57.75 39 57.75C37.5 57.75 36.28 58.96 36.28 60.46C36.28 61.68 36.28 71.43 36.28 72.65C36.28 73.62 36.81 74.53 37.67 75.01C38.08 75.24 38.54 75.35 39 75.35C39.48 75.35 39.97 75.22 40.4 74.96C44.2 72.66 74.52 54.24 78.32 51.94C79.12 51.44 79.62 50.57 79.62 49.62C79.62 48.68 79.12 47.8 78.32 47.31C70.73 42.71 44.2 26.59 40.4 24.28C39.56 23.78 38.52 23.76 37.67 24.24Z\",\n  id: \"dbEdbKdiu\"\n}), React.createElement(\"path\", {\n  d: \"M14.62 67.23C14.62 68.73 15.83 69.94 17.33 69.94C18.55 69.94 28.3 69.94 29.52 69.94C31.01 69.94 32.22 68.73 32.22 67.23C32.22 65.73 31.01 64.52 29.52 64.52C27.08 64.52 18.55 64.52 17.33 64.52C15.83 64.52 14.62 65.73 14.62 67.23Z\",\n  id: \"c5fF479utH\"\n}), React.createElement(\"path\", {\n  d: \"M14.62 67.23C14.62 68.73 15.83 69.94 17.33 69.94C18.55 69.94 28.3 69.94 29.52 69.94C31.01 69.94 32.22 68.73 32.22 67.23C32.22 65.73 31.01 64.52 29.52 64.52C27.08 64.52 18.55 64.52 17.33 64.52C15.83 64.52 14.62 65.73 14.62 67.23Z\",\n  id: \"c1UWYU7Qu\"\n}), React.createElement(\"path\", {\n  d: \"M14.62 32.01C14.62 33.52 15.83 34.73 17.33 34.73C18 34.73 23.43 34.73 24.1 34.73C25.6 34.73 26.81 33.52 26.81 32.01C26.81 30.52 25.6 29.31 24.1 29.31C22.75 29.31 18 29.31 17.33 29.31C15.83 29.31 14.62 30.52 14.62 32.01Z\",\n  id: \"ahd2vuipz\"\n}), React.createElement(\"path\", {\n  d: \"M14.62 32.01C14.62 33.52 15.83 34.73 17.33 34.73C18 34.73 23.43 34.73 24.1 34.73C25.6 34.73 26.81 33.52 26.81 32.01C26.81 30.52 25.6 29.31 24.1 29.31C22.75 29.31 18 29.31 17.33 29.31C15.83 29.31 14.62 30.52 14.62 32.01Z\",\n  id: \"f9Kq4xMQyH\"\n}), React.createElement(\"path\", {\n  d: \"M25.46 42.85C25.46 44.34 26.67 45.56 28.16 45.56C28.3 45.56 29.38 45.56 29.52 45.56C31.01 45.56 32.22 44.34 32.22 42.85C32.22 41.36 31.01 40.14 29.52 40.14C29.25 40.14 28.3 40.14 28.16 40.14C26.67 40.14 25.46 41.36 25.46 42.85Z\",\n  id: \"a345ybIvGz\"\n}), React.createElement(\"path\", {\n  d: \"M25.46 42.85C25.46 44.34 26.67 45.56 28.16 45.56C28.3 45.56 29.38 45.56 29.52 45.56C31.01 45.56 32.22 44.34 32.22 42.85C32.22 41.36 31.01 40.14 29.52 40.14C29.25 40.14 28.3 40.14 28.16 40.14C26.67 40.14 25.46 41.36 25.46 42.85Z\",\n  id: \"b5rUNilvmB\"\n}), React.createElement(\"path\", {\n  d: \"M20.03 55.04C20.03 56.53 21.25 57.75 22.75 57.75C23.15 57.75 26.4 57.75 26.81 57.75C28.3 57.75 29.52 56.53 29.52 55.04C29.52 53.54 28.3 52.34 26.81 52.34C26 52.34 23.15 52.34 22.75 52.34C21.25 52.34 20.03 53.54 20.03 55.04Z\",\n  id: \"b1cjHyUQ8P\"\n}), React.createElement(\"path\", {\n  d: \"M20.03 55.04C20.03 56.53 21.25 57.75 22.75 57.75C23.15 57.75 26.4 57.75 26.81 57.75C28.3 57.75 29.52 56.53 29.52 55.04C29.52 53.54 28.3 52.34 26.81 52.34C26 52.34 23.15 52.34 22.75 52.34C21.25 52.34 20.03 53.54 20.03 55.04Z\",\n  id: \"a5EpgT4WX\"\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#e2h5KiJIj\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 1\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#e2h5KiJIj\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#dbEdbKdiu\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#dbEdbKdiu\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#c5fF479utH\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 1\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#c5fF479utH\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#c1UWYU7Qu\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#c1UWYU7Qu\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#ahd2vuipz\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 1\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#ahd2vuipz\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#f9Kq4xMQyH\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#f9Kq4xMQyH\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#a345ybIvGz\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 1\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#a345ybIvGz\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#b5rUNilvmB\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#b5rUNilvmB\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#b1cjHyUQ8P\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 1\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#b1cjHyUQ8P\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#a5EpgT4WX\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#a5EpgT4WX\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n})))));\n\nvar SvgTriangle = function SvgTriangle(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"0 0 95.82 95.82\",\n    width: 95.82,\n    height: 95.82,\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgTriangle, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/triangle.ec2f1794.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from \"react\";\r\n\r\nexport default class OptionComp extends Component {\r\n\trender() {\r\n\t\t// populates arrays of values for the options\r\n\t\tlet num = [];\r\n\t\tfor (let i = 1; i <= 10; i++) {\r\n\t\t\tnum.push(i);\r\n\t\t}\t\r\n\t\t\r\n\t\treturn (\r\n\t\t\t// create the options in the array num above\r\n\t\t\tnum.map((value, index) => (\r\n\t\t\t<option className=\"input\" key={value}>\r\n\t\t\t\t{value}\r\n\t\t\t</option>\r\n\t\t\t))\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"path\", {\n  d: \"M55.88 15.71L55.9 15.73L55.97 15.73L55.99 15.74L56.03 15.75L56.05 15.75L56.07 15.76L56.11 15.77L56.13 15.8L56.17 15.81L56.21 15.83L56.24 15.85L56.27 15.87L56.29 15.89L56.32 15.9L56.35 15.92L56.36 15.95L56.39 15.96L80.87 37.25L80.9 37.28L80.92 37.29L80.94 37.3L80.95 37.33L80.97 37.34L80.97 37.36L81.05 37.44L81.08 37.49L81.09 37.5L81.13 37.59L81.13 37.61L81.15 37.63L81.15 37.64L81.18 37.71L81.18 37.73L81.19 37.76L81.19 37.78L81.2 37.8L81.2 37.83L81.22 37.85L81.22 37.89L81.23 37.91L81.23 38L81.24 38.03L81.24 38.07L81.23 38.1L81.23 38.19L81.22 38.21L81.22 38.26L81.2 38.28L81.2 38.31L81.19 38.33L81.19 38.34L81.18 38.36L81.18 38.38L81.15 38.45L81.15 38.47L81.12 38.54L81.11 38.55L81.08 38.61L81.06 38.62L81.05 38.64L81.02 38.68L80.99 38.72L80.97 38.74L80.97 38.76L80.95 38.77L80.94 38.79L80.9 38.82L80.88 38.83L80.87 38.85L56.39 60.14L56.35 60.17L56.32 60.2L56.29 60.22L56.27 60.23L56.24 60.25L56.21 60.25L56.19 60.27L56.17 60.29L56.13 60.3L56.11 60.31L56.07 60.32L56.05 60.34L55.99 60.36L55.97 60.36L55.93 60.37L55.9 60.37L55.88 60.38L55.85 60.38L55.82 60.39L55.57 60.39L55.54 60.38L55.49 60.38L55.42 60.36L55.4 60.36L55.34 60.34L55.32 60.32L55.25 60.3L55.22 60.29L55.19 60.27L55.18 60.25L55.14 60.25L55.12 60.23L55.09 60.22L55.06 60.2L55.04 60.17L55.01 60.16L54.85 59.99L54.84 59.96L54.82 59.94L54.8 59.91L54.78 59.88L54.77 59.86L54.72 59.79L54.71 59.75L54.7 59.73L54.69 59.66L54.68 59.64L54.66 59.6L54.66 59.57L54.65 59.56L54.65 59.52L54.64 59.49L54.64 59.43L54.63 59.39L54.63 50.82L53.67 50.82L53.03 50.84L52.71 50.86L52.39 50.88L52.08 50.91L51.76 50.92L51.45 50.96L51.13 51L50.82 51.04L50.49 51.09L50.18 51.14L49.86 51.18L49.56 51.24L49.25 51.31L48.94 51.38L48.63 51.44L48.31 51.51L48.01 51.59L47.7 51.67L47.39 51.75L46.79 51.92L46.49 52.03L45.88 52.23L45.59 52.33L45.29 52.45L44.98 52.55L44.11 52.93L43.82 53.05L43.53 53.19L43.25 53.32L42.95 53.47L42.66 53.61L42.38 53.77L41.99 53.98L41.6 54.2L41.22 54.43L40.82 54.66L40.45 54.9L40.08 55.14L39.7 55.4L39.34 55.65L38.97 55.91L38.62 56.18L38.27 56.46L37.57 57L36.9 57.59L36.24 58.18L35.93 58.5L35.59 58.81L34.68 59.78L34.09 60.44L33.25 61.47L32.97 61.83L32.71 62.18L32.45 62.55L31.95 63.28L31.46 64.03L31.23 64.41L31 64.8L30.78 65.18L30.57 65.59L30.15 66.38L30.05 66.63L29.92 66.88L29.71 67.4L29.6 67.66L29.41 68.18L29.22 68.69L28.95 69.49L28.88 69.75L28.65 70.54L28.58 70.82L28.45 71.36L28.39 71.63L28.35 71.91L28.29 72.16L28.23 72.44L28.19 72.71L28.14 72.99L28.1 73.27L28.05 73.54L27.96 74.36L27.93 74.63L27.89 75.18L27.88 75.46L27.86 75.74L27.84 76.02L27.84 76.3L27.83 76.57L27.83 77.89L27.84 77.96L27.84 78.3L27.86 78.39L27.86 78.56L27.87 78.65L27.87 78.72L27.88 78.81L27.88 78.9L27.89 78.98L27.89 79.23L27.9 79.32L27.9 79.4L27.91 79.48L27.91 79.57L27.94 79.73L27.95 79.83L27.95 79.9L27.96 79.99L27.97 80.06L27.98 80.15L27.98 80.24L28.01 80.4L28.02 80.49L28.02 80.53L28.03 80.55L28.03 80.69L28.02 80.71L28.02 80.77L28.01 80.81L28.01 80.84L28 80.88L27.98 80.9L27.97 80.93L27.97 80.97L27.96 80.99L27.94 81.02L27.93 81.05L27.91 81.07L27.9 81.11L27.89 81.13L27.88 81.17L27.87 81.19L27.84 81.23L27.82 81.24L27.81 81.26L27.79 81.3L27.68 81.41L27.65 81.44L27.6 81.47L27.56 81.48L27.55 81.51L27.52 81.52L27.49 81.54L27.46 81.55L27.42 81.58L27.4 81.59L27.31 81.62L27.28 81.63L27.19 81.67L27.16 81.67L27.12 81.68L27.06 81.68L27.04 81.69L26.9 81.69L26.88 81.68L26.81 81.68L26.77 81.67L26.75 81.67L26.71 81.66L26.69 81.66L26.62 81.63L26.6 81.62L26.54 81.6L26.52 81.59L26.48 81.56L26.45 81.55L26.42 81.54L26.39 81.52L26.38 81.49L26.34 81.48L26.32 81.46L26.28 81.45L26.26 81.42L25.75 80.98L25.25 80.53L24.76 80.06L24.28 79.58L23.81 79.11L22.9 78.1L22.47 77.59L22.04 77.07L21.24 76.01L20.85 75.46L20.48 74.91L20.12 74.35L19.42 73.21L18.79 72.05L18.49 71.44L17.92 70.25L17.41 69.02L16.95 67.77L16.74 67.14L16.54 66.5L16.36 65.85L16.03 64.57L15.89 63.91L15.66 62.59L15.55 61.92L15.47 61.26L15.39 60.58L15.33 59.92L15.3 59.24L15.25 57.89L15.27 57.17L15.31 56.46L15.34 55.76L15.41 55.05L15.58 53.65L15.69 52.95L15.82 52.26L15.96 51.58L16.11 50.89L16.29 50.21L16.47 49.54L16.67 48.86L16.88 48.2L17.35 46.89L17.62 46.25L17.88 45.6L18.17 44.97L18.48 44.34L18.78 43.72L19.11 43.11L19.81 41.89L20.55 40.73L20.95 40.16L21.77 39.03L22.21 38.48L22.66 37.93L23.11 37.41L23.58 36.88L24.07 36.37L24.56 35.87L25.07 35.38L26.12 34.43L26.67 33.97L27.23 33.53L27.55 33.26L28.57 32.5L29.27 32.01L29.62 31.78L29.98 31.54L30.33 31.31L30.69 31.08L31.05 30.86L31.41 30.65L31.77 30.43L32.52 30.01L32.89 29.81L33.26 29.63L33.63 29.43L34.02 29.25L34.4 29.05L34.78 28.88L35.17 28.71L35.56 28.54L35.94 28.37L37.12 27.9L37.53 27.76L37.92 27.61L38.73 27.35L39.12 27.23L39.54 27.1L40.35 26.88L41.17 26.65L41.59 26.55L42.42 26.38L43.33 26.24L43.63 26.21L43.95 26.17L44.24 26.13L44.54 26.08L45.15 26.01L45.46 25.98L46.67 25.84L46.99 25.82L47.59 25.75L47.89 25.73L48.2 25.7L48.5 25.68L48.82 25.64L49.72 25.57L50.04 25.55L51.26 25.47L51.56 25.45L51.87 25.43L52.17 25.42L52.49 25.4L53.09 25.37L53.41 25.35L54.63 25.3L54.63 16.69L54.64 16.66L54.64 16.61L54.65 16.58L54.65 16.54L54.66 16.52L54.66 16.48L54.68 16.46L54.69 16.4L54.7 16.38L54.71 16.34L54.72 16.32L54.73 16.29L54.75 16.26L54.77 16.24L54.78 16.2L54.8 16.19L54.82 16.17L54.84 16.13L54.85 16.11L55.06 15.9L55.09 15.89L55.12 15.87L55.14 15.85L55.18 15.83L55.19 15.82L55.22 15.81L55.25 15.8L55.28 15.77L55.32 15.76L55.34 15.75L55.36 15.75L55.4 15.74L55.42 15.73L55.49 15.73L55.51 15.71L55.57 15.71L55.61 15.7L55.78 15.7L55.82 15.71L55.88 15.71ZM56.75 26.39L56.75 26.48L56.69 26.7L56.66 26.79L56.64 26.83L56.62 26.88L56.59 26.91L56.49 27.05L56.39 27.14L56.35 27.17L56.32 27.2L56.28 27.23L56.24 27.25L56.2 27.27L56.12 27.32L56.09 27.33L56.04 27.35L55.96 27.38L55.9 27.38L55.85 27.39L55.82 27.39L55.77 27.4L55.71 27.4L54.64 27.44L54.29 27.45L53.93 27.47L53.57 27.48L53.21 27.51L52.85 27.52L51.77 27.59L51.42 27.61L49.99 27.69L49.63 27.73L49.28 27.75L47.84 27.88L47.49 27.91L46.78 27.98L46.42 28.03L46.07 28.06L45.7 28.09L45.34 28.13L44.99 28.18L44.28 28.27L43.93 28.32L43.21 28.4L42.86 28.45L41.56 28.75L41.13 28.86L40.71 28.98L40.28 29.1L39.84 29.23L39.44 29.36L39.01 29.5L38.6 29.65L38.17 29.79L37.34 30.1L36.52 30.43L35.72 30.79L34.92 31.16L34.12 31.57L33.34 31.99L32.96 32.2L32.59 32.42L31.82 32.89L31.44 33.12L30.34 33.85L29.98 34.11L29.25 34.64L28.9 34.9L28.57 35.18L27.98 35.65L27.41 36.13L26.88 36.62L26.34 37.12L25.82 37.63L25.32 38.15L24.83 38.69L24.35 39.24L23.87 39.8L23.43 40.37L23 40.94L22.58 41.53L22.18 42.13L21.79 42.74L21.41 43.36L21.05 43.98L20.71 44.62L20.39 45.26L20.07 45.91L19.78 46.57L19.51 47.23L19.25 47.91L19 48.59L18.77 49.28L18.56 49.97L18.36 50.67L18.19 51.37L18.02 52.08L17.88 52.79L17.75 53.5L17.65 54.22L17.56 54.94L17.44 56.41L17.39 57.14L17.38 57.89L17.39 58.51L17.42 59.14L17.45 59.77L17.5 60.38L17.56 61L17.72 62.24L17.82 62.84L17.94 63.46L18.07 64.05L18.21 64.66L18.36 65.25L18.52 65.85L18.9 67.02L19.11 67.61L19.33 68.18L19.55 68.76L19.79 69.33L20.05 69.89L20.32 70.45L20.88 71.53L21.19 72.08L21.51 72.6L21.83 73.13L22.17 73.65L22.52 74.17L22.87 74.67L23.24 75.17L23.63 75.65L24.02 76.13L24.85 77.07L25.27 77.53L25.71 77.98L25.71 77.3L25.7 77.25L25.7 76.8L25.74 75.46L25.76 75.13L25.78 74.78L25.85 74.13L25.89 73.79L26.02 72.8L26.06 72.48L26.12 72.14L26.19 71.81L26.32 71.17L26.39 70.83L26.71 69.55L26.91 68.9L27.02 68.6L27.11 68.27L27.34 67.64L27.45 67.33L27.56 67.01L27.7 66.71L27.82 66.39L27.95 66.08L28.09 65.79L28.23 65.47L28.47 65L28.73 64.52L29.24 63.59L29.8 62.68L30.08 62.24L30.4 61.79L30.69 61.35L31.32 60.49L31.64 60.07L31.97 59.66L32.32 59.25L32.66 58.85L33.02 58.45L34.1 57.3L34.87 56.55L35.25 56.2L35.66 55.84L36.07 55.5L36.47 55.16L36.89 54.84L37.3 54.5L37.74 54.18L38.61 53.57L39.49 53L39.95 52.71L41.35 51.9L41.69 51.73L42.02 51.54L42.36 51.38L43.06 51.04L43.76 50.74L44.47 50.46L44.83 50.32L45.58 50.06L45.95 49.96L46.71 49.73L47.09 49.63L47.49 49.52L48.27 49.35L49.07 49.2L49.89 49.06L50.74 48.95L51.59 48.86L52.02 48.83L52.47 48.79L52.92 48.77L53.36 48.73L53.82 48.72L54.29 48.7L54.76 48.7L55.22 48.69L55.75 48.69L55.81 48.7L55.85 48.7L55.93 48.72L55.99 48.73L56.03 48.74L56.07 48.77L56.12 48.78L56.16 48.8L56.24 48.84L56.27 48.86L56.32 48.88L56.38 48.94L56.52 49.07L56.53 49.11L56.56 49.14L56.59 49.19L56.61 49.22L56.63 49.27L56.66 49.29L56.68 49.34L56.7 49.43L56.75 49.61L56.75 49.71L56.76 49.76L56.76 56.99L78.55 38.05L56.76 19.09L56.76 26.34L56.75 26.39Z\",\n  id: \"c6NhwuO2LB\"\n}), React.createElement(\"path\", {\n  d: \"M54.46 18.2L54.48 18.21L54.55 18.21L54.57 18.22L54.61 18.23L54.63 18.23L54.65 18.24L54.68 18.25L54.71 18.27L54.74 18.28L54.78 18.31L54.81 18.33L54.84 18.34L54.86 18.36L54.88 18.37L54.92 18.4L54.93 18.42L54.95 18.43L78.4 38.82L78.43 38.85L78.46 38.87L78.47 38.88L78.48 38.9L78.5 38.91L78.5 38.93L78.58 39.01L78.6 39.06L78.61 39.07L78.66 39.16L78.66 39.17L78.67 39.19L78.67 39.2L78.7 39.27L78.7 39.29L78.71 39.31L78.71 39.33L78.72 39.36L78.72 39.38L78.74 39.4L78.74 39.43L78.75 39.46L78.75 39.55L78.76 39.57L78.76 39.61L78.75 39.64L78.75 39.73L78.74 39.75L78.74 39.79L78.72 39.81L78.72 39.84L78.71 39.86L78.71 39.87L78.7 39.89L78.7 39.9L78.67 39.97L78.67 39.99L78.65 40.06L78.63 40.07L78.6 40.13L78.59 40.14L78.58 40.16L78.55 40.19L78.52 40.24L78.5 40.25L78.5 40.27L78.48 40.28L78.47 40.31L78.43 40.33L78.41 40.34L78.4 40.36L54.95 60.75L54.92 60.79L54.88 60.81L54.86 60.83L54.84 60.84L54.81 60.86L54.78 60.86L54.76 60.88L54.74 60.9L54.71 60.91L54.68 60.92L54.65 60.93L54.63 60.94L54.57 60.96L54.55 60.96L54.52 60.98L54.48 60.98L54.46 60.99L54.44 60.99L54.4 61L54.17 61L54.14 60.99L54.09 60.99L54.02 60.96L54 60.96L53.95 60.94L53.92 60.93L53.86 60.91L53.83 60.9L53.8 60.88L53.79 60.86L53.76 60.86L53.73 60.84L53.71 60.83L53.68 60.81L53.66 60.79L53.63 60.77L53.48 60.61L53.47 60.59L53.44 60.56L53.43 60.53L53.41 60.51L53.4 60.48L53.36 60.42L53.34 60.38L53.33 60.36L53.32 60.29L53.31 60.27L53.3 60.24L53.3 60.21L53.29 60.19L53.29 60.16L53.28 60.13L53.28 60.07L53.27 60.04L53.27 51.82L52.35 51.82L51.74 51.85L51.42 51.87L51.12 51.88L50.82 51.91L50.52 51.92L50.22 51.96L49.92 52L49.62 52.04L49.3 52.08L49 52.14L48.7 52.17L48.41 52.23L48.11 52.29L47.82 52.36L47.52 52.42L47.22 52.48L46.93 52.56L46.62 52.64L46.33 52.72L45.75 52.88L45.46 52.98L44.88 53.17L44.6 53.27L44.31 53.39L44.02 53.49L43.19 53.84L42.91 53.97L42.63 54.1L42.36 54.22L42.08 54.37L41.8 54.5L41.54 54.65L41.16 54.85L40.79 55.06L40.42 55.28L40.04 55.51L39.68 55.73L39.33 55.96L38.97 56.21L38.62 56.46L38.27 56.7L37.93 56.96L37.6 57.23L36.93 57.75L36.28 58.31L35.65 58.88L35.35 59.18L35.03 59.48L34.16 60.41L33.59 61.04L32.79 62.02L32.52 62.37L32.27 62.71L32.02 63.06L31.54 63.77L31.07 64.48L30.85 64.85L30.63 65.22L30.42 65.59L30.22 65.98L29.82 66.73L29.72 66.97L29.59 67.21L29.39 67.71L29.29 67.96L29.1 68.45L28.92 68.94L28.67 69.71L28.6 69.96L28.38 70.72L28.31 70.99L28.19 71.5L28.13 71.76L28.09 72.03L28.03 72.27L27.97 72.54L27.94 72.8L27.89 73.06L27.85 73.33L27.81 73.59L27.72 74.38L27.68 74.64L27.65 75.16L27.64 75.43L27.62 75.7L27.61 75.97L27.61 76.23L27.6 76.49L27.6 77.76L27.61 77.83L27.61 78.15L27.62 78.24L27.62 78.4L27.63 78.49L27.63 78.55L27.64 78.64L27.64 78.72L27.65 78.8L27.65 79.05L27.66 79.12L27.66 79.2L27.67 79.28L27.67 79.37L27.7 79.53L27.71 79.61L27.71 79.68L27.72 79.77L27.73 79.84L27.74 79.93L27.74 80.01L27.76 80.16L27.77 80.25L27.77 80.28L27.79 80.31L27.79 80.44L27.77 80.46L27.77 80.52L27.76 80.55L27.76 80.59L27.75 80.62L27.74 80.64L27.73 80.68L27.73 80.71L27.72 80.73L27.7 80.75L27.68 80.79L27.67 80.81L27.66 80.84L27.65 80.86L27.64 80.9L27.63 80.92L27.61 80.95L27.58 80.97L27.57 80.99L27.55 81.02L27.45 81.13L27.42 81.15L27.37 81.19L27.34 81.2L27.33 81.22L27.29 81.23L27.27 81.26L27.24 81.27L27.2 81.29L27.18 81.3L27.09 81.33L27.07 81.34L26.98 81.38L26.95 81.38L26.91 81.39L26.86 81.39L26.84 81.4L26.7 81.4L26.68 81.39L26.61 81.39L26.58 81.38L26.56 81.38L26.52 81.37L26.5 81.37L26.43 81.34L26.41 81.33L26.36 81.31L26.33 81.3L26.3 81.28L26.27 81.27L26.24 81.26L26.21 81.23L26.2 81.21L26.17 81.2L26.14 81.18L26.11 81.17L26.09 81.14L25.6 80.72L25.12 80.28L24.65 79.84L24.19 79.38L23.74 78.92L22.87 77.96L22.46 77.47L22.05 76.97L21.28 75.95L20.91 75.43L20.55 74.9L20.21 74.37L19.54 73.28L18.93 72.16L18.64 71.58L18.1 70.44L17.61 69.26L17.17 68.06L16.97 67.46L16.78 66.85L16.6 66.22L16.29 64.99L16.16 64.37L15.93 63.1L15.83 62.46L15.75 61.82L15.68 61.18L15.62 60.54L15.59 59.89L15.54 58.6L15.56 57.91L15.6 57.23L15.63 56.56L15.7 55.88L15.85 54.54L15.97 53.87L16.09 53.21L16.22 52.55L16.37 51.89L16.53 51.24L16.71 50.6L16.9 49.95L17.1 49.31L17.55 48.06L17.81 47.45L18.06 46.82L18.34 46.22L18.63 45.62L18.92 45.03L19.24 44.44L19.91 43.27L20.62 42.16L21 41.61L21.79 40.53L22.2 40L22.64 39.48L23.08 38.98L23.52 38.48L23.99 37.98L24.46 37.5L24.95 37.04L25.95 36.12L26.48 35.68L27.01 35.26L27.33 35L28.3 34.28L28.97 33.81L29.3 33.59L29.65 33.35L29.98 33.14L30.33 32.92L30.68 32.7L31.02 32.5L31.37 32.29L32.08 31.89L32.44 31.7L32.8 31.52L33.15 31.33L33.52 31.16L33.89 30.97L34.25 30.81L34.63 30.64L35 30.48L35.36 30.32L36.49 29.87L36.88 29.74L37.26 29.59L38.03 29.35L38.41 29.22L38.81 29.1L39.58 28.89L40.37 28.68L40.78 28.58L41.57 28.41L42.44 28.27L42.73 28.25L43.03 28.21L43.31 28.17L43.6 28.13L44.18 28.06L44.48 28.03L45.64 27.89L45.94 27.87L46.52 27.81L46.81 27.79L47.1 27.76L47.4 27.74L47.7 27.7L48.57 27.64L48.87 27.62L50.04 27.54L50.33 27.53L50.62 27.5L50.91 27.49L51.21 27.47L51.79 27.45L52.09 27.43L53.27 27.38L53.27 19.13L53.28 19.1L53.28 19.05L53.29 19.02L53.29 18.99L53.3 18.97L53.3 18.93L53.31 18.91L53.32 18.85L53.33 18.83L53.34 18.8L53.36 18.78L53.37 18.74L53.38 18.72L53.4 18.7L53.41 18.66L53.43 18.65L53.44 18.63L53.47 18.6L53.48 18.57L53.68 18.37L53.71 18.36L53.73 18.34L53.76 18.33L53.79 18.31L53.8 18.3L53.83 18.28L53.86 18.27L53.89 18.25L53.92 18.24L53.95 18.23L53.97 18.23L54 18.22L54.02 18.21L54.09 18.21L54.11 18.2L54.17 18.2L54.2 18.18L54.37 18.18L54.4 18.2L54.46 18.2ZM55.3 28.42L55.3 28.51L55.24 28.72L55.21 28.81L55.2 28.84L55.17 28.89L55.14 28.92L55.05 29.06L54.95 29.14L54.92 29.17L54.88 29.2L54.85 29.22L54.81 29.24L54.77 29.27L54.69 29.31L54.66 29.32L54.62 29.35L54.54 29.37L54.48 29.37L54.44 29.38L54.4 29.38L54.36 29.39L54.3 29.39L53.28 29.42L52.94 29.43L52.6 29.46L52.25 29.47L51.9 29.49L51.56 29.5L50.53 29.57L50.2 29.59L48.82 29.67L48.48 29.7L48.14 29.72L46.76 29.85L46.42 29.88L45.74 29.95L45.4 29.99L45.06 30.03L44.72 30.05L44.37 30.09L44.04 30.14L43.35 30.23L43.02 30.27L42.33 30.35L41.99 30.39L40.74 30.68L40.33 30.79L39.93 30.91L39.52 31.02L39.1 31.14L38.71 31.26L38.3 31.4L37.91 31.54L37.5 31.68L36.7 31.98L35.92 32.29L35.15 32.64L34.38 32.99L33.62 33.39L32.87 33.79L32.51 33.99L32.15 34.2L31.41 34.65L31.06 34.87L29.99 35.57L29.65 35.82L28.96 36.32L28.62 36.58L28.3 36.85L27.74 37.29L27.19 37.75L26.68 38.22L26.17 38.7L25.66 39.19L25.18 39.69L24.72 40.2L24.26 40.73L23.8 41.27L23.38 41.81L22.96 42.36L22.56 42.93L22.18 43.5L21.8 44.09L21.45 44.68L21.1 45.27L20.78 45.89L20.46 46.5L20.16 47.12L19.88 47.75L19.63 48.39L19.37 49.03L19.14 49.69L18.91 50.35L18.71 51.01L18.52 51.68L18.35 52.35L18.2 53.03L18.06 53.71L17.94 54.39L17.84 55.08L17.75 55.77L17.64 57.18L17.59 57.88L17.58 58.6L17.59 59.19L17.62 59.79L17.65 60.4L17.7 60.99L17.75 61.58L17.91 62.76L18.01 63.34L18.12 63.93L18.24 64.5L18.38 65.08L18.52 65.65L18.68 66.22L19.03 67.35L19.24 67.91L19.45 68.45L19.66 69.01L19.89 69.56L20.14 70.09L20.4 70.63L20.93 71.67L21.23 72.19L21.53 72.69L21.85 73.2L22.17 73.7L22.51 74.19L22.84 74.67L23.2 75.15L23.57 75.61L23.95 76.08L24.74 76.97L25.14 77.42L25.56 77.84L25.56 77.19L25.55 77.15L25.55 76.71L25.59 75.43L25.61 75.12L25.63 74.78L25.7 74.16L25.73 73.83L25.85 72.88L25.9 72.57L25.95 72.25L26.02 71.94L26.14 71.32L26.21 71L26.52 69.77L26.71 69.15L26.81 68.86L26.9 68.54L27.13 67.94L27.23 67.64L27.34 67.34L27.47 67.05L27.58 66.75L27.71 66.44L27.84 66.17L27.97 65.86L28.21 65.41L28.45 64.95L28.95 64.06L29.48 63.19L29.75 62.76L30.05 62.34L30.33 61.91L30.93 61.09L31.24 60.69L31.56 60.29L31.89 59.9L32.22 59.51L32.56 59.13L33.6 58.03L34.34 57.31L34.7 56.98L35.1 56.63L35.49 56.31L35.87 55.99L36.27 55.67L36.67 55.35L37.08 55.05L37.92 54.46L38.77 53.91L39.2 53.63L40.54 52.86L40.87 52.69L41.19 52.52L41.51 52.36L42.18 52.04L42.85 51.75L43.53 51.48L43.88 51.34L44.59 51.1L44.95 51L45.68 50.79L46.04 50.69L46.42 50.58L47.17 50.42L47.94 50.27L48.72 50.14L49.54 50.04L50.35 49.95L50.77 49.92L51.2 49.88L51.63 49.86L52.05 49.83L52.5 49.81L52.94 49.79L53.39 49.79L53.83 49.78L54.34 49.78L54.39 49.79L54.44 49.79L54.52 49.81L54.57 49.83L54.61 49.84L54.65 49.86L54.69 49.87L54.73 49.89L54.81 49.93L54.84 49.95L54.88 49.97L54.94 50.03L55.07 50.15L55.09 50.18L55.12 50.22L55.14 50.26L55.16 50.29L55.19 50.34L55.21 50.36L55.23 50.41L55.25 50.5L55.3 50.66L55.3 50.76L55.31 50.81L55.31 57.74L76.18 39.59L55.31 21.43L55.31 28.37L55.3 28.42Z\",\n  id: \"f1ZFKhZbc3\"\n}), React.createElement(\"path\", {\n  d: \"M36.26 14.85L36.28 14.85L36.31 14.85L36.35 14.87L36.4 14.87L36.42 14.88L36.45 14.89L36.46 14.91L36.49 14.92L36.51 14.93L36.54 14.94L36.55 14.95L36.58 14.96L36.61 14.99L36.64 15.01L36.68 15.03L56.33 31.82L56.35 31.85L56.37 31.86L56.38 31.86L56.39 31.88L56.41 31.89L56.42 31.91L56.44 31.93L56.45 31.95L56.48 31.98L56.49 32.01L56.5 32.02L56.54 32.09L56.55 32.1L56.56 32.12L56.56 32.14L56.58 32.19L56.58 32.21L56.59 32.23L56.59 32.23L56.6 32.25L56.6 32.27L56.61 32.29L56.61 32.32L56.62 32.34L56.62 32.41L56.63 32.43L56.63 32.46L56.62 32.48L56.62 32.56L56.61 32.58L56.61 32.61L56.6 32.63L56.6 32.65L56.59 32.67L56.59 32.68L56.58 32.7L56.58 32.71L56.56 32.76L56.56 32.78L56.53 32.83L56.52 32.84L56.48 32.92L56.45 32.95L56.43 32.98L56.42 32.99L56.41 33.01L56.39 33.02L56.38 33.04L56.35 33.06L56.34 33.07L56.33 33.09L36.68 49.86L36.66 49.88L36.64 49.88L36.61 49.9L36.6 49.92L36.58 49.93L36.55 49.95L36.54 49.95L36.51 49.96L36.49 49.98L36.46 49.99L36.45 50L36.42 50.01L36.4 50.02L36.35 50.03L36.33 50.03L36.31 50.04L36.28 50.04L36.26 50.05L36.24 50.05L36.21 50.06L36.02 50.06L35.99 50.05L35.95 50.05L35.9 50.03L35.88 50.03L35.83 50.02L35.81 50.01L35.76 49.99L35.74 49.98L35.72 49.96L35.7 49.95L35.67 49.95L35.64 49.92L35.61 49.9L35.59 49.88L35.58 49.88L35.43 49.73L35.43 49.72L35.41 49.7L35.4 49.67L35.37 49.64L35.35 49.61L35.33 49.56L35.32 49.54L35.3 49.49L35.29 49.47L35.28 49.44L35.28 49.37L35.27 49.35L35.27 49.3L35.26 49.28L35.26 42.52L34.49 42.52L33.98 42.54L33.47 42.56L33.21 42.59L32.96 42.61L32.7 42.63L32.46 42.66L32.2 42.68L31.94 42.72L31.69 42.76L31.43 42.8L31.2 42.84L30.94 42.9L30.44 43L29.95 43.12L29.7 43.19L29.45 43.25L28.97 43.39L28.73 43.47L28.23 43.63L28 43.72L27.76 43.8L27.52 43.88L26.81 44.17L26.59 44.28L26.35 44.39L26.12 44.49L25.88 44.61L25.65 44.72L25.43 44.84L25.12 45L24.8 45.18L24.49 45.36L24.18 45.55L23.88 45.73L23.57 45.93L23.27 46.13L22.99 46.32L22.69 46.53L22.41 46.74L22.12 46.96L21.56 47.39L21.02 47.85L20.5 48.33L20.24 48.56L19.98 48.81L19.25 49.58L18.77 50.1L18.09 50.91L17.87 51.19L17.66 51.47L17.45 51.76L17.05 52.33L16.85 52.63L16.47 53.22L16.12 53.84L15.94 54.16L15.61 54.78L15.52 54.98L15.42 55.18L15.25 55.58L15.17 55.79L15.02 56.19L14.94 56.41L14.86 56.6L14.58 57.44L14.4 58.06L14.35 58.28L14.24 58.71L14.2 58.91L14.15 59.13L14.11 59.34L14.06 59.56L14.03 59.77L13.99 59.99L13.96 60.2L13.93 60.41L13.85 61.08L13.83 61.28L13.79 61.72L13.76 62.37L13.76 62.59L13.75 62.81L13.75 63.85L13.76 63.91L13.76 64.18L13.77 64.25L13.77 64.51L13.78 64.58L13.78 64.65L13.79 64.71L13.79 64.78L13.8 64.84L13.8 64.91L13.81 64.97L13.81 65.04L13.82 65.1L13.82 65.17L13.85 65.38L13.85 65.51L13.86 65.57L13.87 65.64L13.87 65.7L13.88 65.77L13.89 65.82L13.9 65.9L13.9 65.92L13.91 65.95L13.91 66.05L13.9 66.07L13.9 66.12L13.89 66.15L13.89 66.18L13.87 66.22L13.86 66.25L13.86 66.27L13.85 66.3L13.84 66.32L13.83 66.35L13.82 66.36L13.81 66.39L13.79 66.41L13.77 66.45L13.76 66.48L13.73 66.51L13.71 66.54L13.6 66.65L13.56 66.68L13.54 66.69L13.52 66.71L13.49 66.72L13.45 66.74L13.42 66.76L13.4 66.77L13.32 66.8L13.31 66.8L13.23 66.83L13.2 66.83L13.17 66.84L13.13 66.84L13.1 66.85L13 66.85L12.97 66.84L12.92 66.84L12.89 66.83L12.87 66.83L12.85 66.82L12.82 66.82L12.78 66.8L12.76 66.8L12.71 66.78L12.69 66.77L12.66 66.75L12.62 66.73L12.59 66.72L12.58 66.7L12.55 66.69L12.51 66.65L12.49 66.64L12.07 66.28L11.67 65.92L11.28 65.56L10.89 65.18L10.51 64.8L10.15 64.42L9.79 64.02L9.1 63.21L8.45 62.36L8.14 61.94L7.84 61.5L7.55 61.07L7.27 60.62L7 60.16L6.74 59.71L6.24 58.78L5.79 57.82L5.58 57.35L5.38 56.85L5.01 55.88L4.84 55.38L4.69 54.87L4.54 54.36L4.28 53.35L4.16 52.84L4.06 52.31L3.97 51.8L3.89 51.27L3.82 50.75L3.75 50.21L3.71 49.68L3.68 49.15L3.64 48.09L3.66 47.51L3.68 46.96L3.72 46.4L3.77 45.85L3.83 45.29L3.9 44.75L4 44.19L4.1 43.65L4.21 43.11L4.34 42.57L4.48 42.03L4.63 41.5L4.78 40.98L4.95 40.45L5.33 39.42L5.54 38.91L5.76 38.4L5.98 37.91L6.23 37.41L6.48 36.92L6.74 36.44L7.01 35.95L7.3 35.49L7.6 35.02L8.21 34.11L8.88 33.22L9.59 32.36L9.96 31.94L10.34 31.53L10.72 31.12L11.12 30.74L11.54 30.35L12.37 29.6L12.8 29.24L13.25 28.89L13.53 28.68L14.34 28.07L15.17 27.51L15.47 27.32L15.75 27.14L16.32 26.78L16.62 26.61L16.91 26.44L17.5 26.12L17.8 25.96L18.11 25.81L18.41 25.65L18.71 25.51L19.02 25.36L19.64 25.09L19.94 24.96L20.26 24.82L21.2 24.45L21.53 24.34L21.85 24.22L22.49 24.02L23.15 23.82L23.79 23.64L24.45 23.47L24.79 23.39L25.46 23.25L26.19 23.14L26.44 23.11L26.91 23.05L27.16 23.02L27.65 22.96L27.89 22.94L28.88 22.83L29.12 22.81L29.61 22.76L29.86 22.74L30.1 22.72L30.34 22.7L30.59 22.67L31.33 22.62L31.57 22.6L32.55 22.53L33.05 22.51L33.29 22.5L33.54 22.48L34.02 22.46L34.28 22.44L35.26 22.41L35.26 15.62L35.27 15.6L35.27 15.55L35.28 15.53L35.28 15.46L35.29 15.44L35.31 15.39L35.32 15.37L35.33 15.34L35.35 15.3L35.35 15.28L35.37 15.26L35.38 15.24L35.4 15.22L35.41 15.2L35.43 15.17L35.43 15.16L35.56 15.03L35.58 15.02L35.61 14.99L35.64 14.98L35.65 14.96L35.67 14.95L35.7 14.94L35.76 14.91L35.79 14.89L35.83 14.87L35.88 14.87L35.9 14.86L35.93 14.85L35.95 14.85L35.97 14.85L36.02 14.85L36.04 14.84L36.18 14.84L36.21 14.85L36.26 14.85ZM36.97 23.25L36.97 23.33L36.92 23.51L36.89 23.58L36.88 23.61L36.8 23.73L36.77 23.76L36.76 23.78L36.68 23.86L36.65 23.88L36.61 23.91L36.55 23.94L36.53 23.96L36.46 24L36.43 24L36.39 24.02L36.32 24.04L36.24 24.06L36.21 24.06L36.17 24.07L36.13 24.07L35.27 24.09L34.98 24.1L34.7 24.12L34.41 24.12L34.12 24.14L33.83 24.14L32.97 24.2L32.68 24.21L31.25 24.31L30.97 24.33L29.81 24.44L29.53 24.46L28.96 24.51L28.67 24.55L28.38 24.58L28.09 24.6L27.81 24.64L27.53 24.67L26.95 24.74L26.68 24.78L26.09 24.85L25.81 24.89L24.76 25.12L24.42 25.21L23.73 25.4L23.39 25.49L22.72 25.71L22.38 25.83L22.05 25.94L21.38 26.19L20.73 26.44L20.07 26.73L19.43 27.03L18.8 27.34L18.17 27.67L17.55 28.01L16.95 28.38L16.65 28.57L15.76 29.14L15.47 29.34L14.89 29.77L14.61 29.97L14.33 30.19L13.87 30.56L13.41 30.94L12.97 31.32L12.55 31.71L12.13 32.12L11.72 32.53L11.33 32.96L10.95 33.38L10.57 33.83L10.21 34.28L9.86 34.73L9.21 35.67L8.89 36.15L8.59 36.64L8.3 37.12L7.77 38.13L7.52 38.65L7.28 39.17L7.06 39.69L6.65 40.76L6.47 41.3L6.3 41.84L6.14 42.39L6 42.94L5.87 43.5L5.76 44.06L5.66 44.63L5.57 45.2L5.5 45.77L5.4 46.92L5.37 47.5L5.36 48.09L5.37 48.57L5.41 49.57L5.45 50.05L5.5 50.55L5.56 51.02L5.63 51.51L5.71 51.99L5.81 52.48L5.9 52.95L6.02 53.42L6.14 53.89L6.28 54.36L6.58 55.3L6.74 55.74L7.09 56.65L7.29 57.1L7.5 57.55L7.71 57.98L8.16 58.85L8.41 59.27L8.66 59.69L8.93 60.1L9.2 60.51L9.47 60.92L9.76 61.3L10.06 61.7L10.37 62.09L10.68 62.47L11.35 63.21L11.69 63.57L12.04 63.92L12.04 63.39L12.03 63.35L12.03 62.99L12.06 61.94L12.1 61.4L12.13 61.15L12.15 60.89L12.18 60.63L12.29 59.84L12.33 59.59L12.37 59.32L12.43 59.06L12.53 58.56L12.59 58.29L12.72 57.78L12.85 57.28L13.01 56.77L13.09 56.53L13.17 56.27L13.25 56.03L13.35 55.77L13.44 55.52L13.54 55.29L13.74 54.79L13.96 54.31L14.06 54.07L14.46 53.31L14.88 52.58L15.11 52.22L15.32 51.87L15.55 51.51L15.8 51.16L16.04 50.81L16.29 50.48L16.54 50.14L16.81 49.8L17.07 49.49L17.35 49.16L17.62 48.84L18.49 47.92L18.78 47.62L19.09 47.32L19.4 47.04L19.71 46.76L20.03 46.47L20.36 46.2L20.68 45.95L21.01 45.68L21.35 45.42L21.7 45.17L22.39 44.69L23.12 44.23L23.48 44L23.85 43.8L24.59 43.37L24.87 43.23L25.14 43.08L25.42 42.95L25.97 42.68L26.25 42.57L26.53 42.46L27.11 42.23L27.4 42.12L27.99 41.92L28.29 41.83L28.9 41.65L29.2 41.57L29.52 41.49L30.16 41.36L30.8 41.24L31.13 41.19L31.45 41.13L32.14 41.05L32.82 40.98L33.17 40.94L33.53 40.91L33.88 40.9L34.24 40.87L34.61 40.86L34.98 40.84L35.36 40.84L35.74 40.83L36.16 40.83L36.2 40.84L36.24 40.84L36.31 40.86L36.39 40.88L36.42 40.9L36.46 40.91L36.48 40.92L36.55 40.96L36.58 40.98L36.61 40.99L36.64 41.02L36.67 41.04L36.77 41.14L36.79 41.17L36.82 41.2L36.84 41.23L36.85 41.26L36.89 41.32L36.91 41.36L36.91 41.39L36.93 41.43L36.97 41.56L36.97 41.64L36.98 41.67L36.98 47.38L54.47 32.45L36.98 17.51L36.98 23.22L36.97 23.25Z\",\n  id: \"grNqosIIg\"\n}), React.createElement(\"path\", {\n  d: \"M36.26 14.85L36.28 14.85L36.31 14.85L36.35 14.87L36.4 14.87L36.42 14.88L36.45 14.89L36.46 14.91L36.49 14.92L36.51 14.93L36.54 14.94L36.55 14.95L36.58 14.96L36.61 14.99L36.64 15.01L36.68 15.03L56.33 31.82L56.35 31.85L56.37 31.86L56.38 31.86L56.39 31.88L56.41 31.89L56.42 31.91L56.44 31.93L56.45 31.95L56.48 31.98L56.49 32.01L56.5 32.02L56.54 32.09L56.55 32.1L56.56 32.12L56.56 32.14L56.58 32.19L56.58 32.21L56.59 32.23L56.59 32.23L56.6 32.25L56.6 32.27L56.61 32.29L56.61 32.32L56.62 32.34L56.62 32.41L56.63 32.43L56.63 32.46L56.62 32.48L56.62 32.56L56.61 32.58L56.61 32.61L56.6 32.63L56.6 32.65L56.59 32.67L56.59 32.68L56.58 32.7L56.58 32.71L56.56 32.76L56.56 32.78L56.53 32.83L56.52 32.84L56.48 32.92L56.45 32.95L56.43 32.98L56.42 32.99L56.41 33.01L56.39 33.02L56.38 33.04L56.35 33.06L56.34 33.07L56.33 33.09L36.68 49.86L36.66 49.88L36.64 49.88L36.61 49.9L36.6 49.92L36.58 49.93L36.55 49.95L36.54 49.95L36.51 49.96L36.49 49.98L36.46 49.99L36.45 50L36.42 50.01L36.4 50.02L36.35 50.03L36.33 50.03L36.31 50.04L36.28 50.04L36.26 50.05L36.24 50.05L36.21 50.06L36.02 50.06L35.99 50.05L35.95 50.05L35.9 50.03L35.88 50.03L35.83 50.02L35.81 50.01L35.76 49.99L35.74 49.98L35.72 49.96L35.7 49.95L35.67 49.95L35.64 49.92L35.61 49.9L35.59 49.88L35.58 49.88L35.43 49.73L35.43 49.72L35.41 49.7L35.4 49.67L35.37 49.64L35.35 49.61L35.33 49.56L35.32 49.54L35.3 49.49L35.29 49.47L35.28 49.44L35.28 49.37L35.27 49.35L35.27 49.3L35.26 49.28L35.26 42.52L34.49 42.52L33.98 42.54L33.47 42.56L33.21 42.59L32.96 42.61L32.7 42.63L32.46 42.66L32.2 42.68L31.94 42.72L31.69 42.76L31.43 42.8L31.2 42.84L30.94 42.9L30.44 43L29.95 43.12L29.7 43.19L29.45 43.25L28.97 43.39L28.73 43.47L28.23 43.63L28 43.72L27.76 43.8L27.52 43.88L26.81 44.17L26.59 44.28L26.35 44.39L26.12 44.49L25.88 44.61L25.65 44.72L25.43 44.84L25.12 45L24.8 45.18L24.49 45.36L24.18 45.55L23.88 45.73L23.57 45.93L23.27 46.13L22.99 46.32L22.69 46.53L22.41 46.74L22.12 46.96L21.56 47.39L21.02 47.85L20.5 48.33L20.24 48.56L19.98 48.81L19.25 49.58L18.77 50.1L18.09 50.91L17.87 51.19L17.66 51.47L17.45 51.76L17.05 52.33L16.85 52.63L16.47 53.22L16.12 53.84L15.94 54.16L15.61 54.78L15.52 54.98L15.42 55.18L15.25 55.58L15.17 55.79L15.02 56.19L14.94 56.41L14.86 56.6L14.58 57.44L14.4 58.06L14.35 58.28L14.24 58.71L14.2 58.91L14.15 59.13L14.11 59.34L14.06 59.56L14.03 59.77L13.99 59.99L13.96 60.2L13.93 60.41L13.85 61.08L13.83 61.28L13.79 61.72L13.76 62.37L13.76 62.59L13.75 62.81L13.75 63.85L13.76 63.91L13.76 64.18L13.77 64.25L13.77 64.51L13.78 64.58L13.78 64.65L13.79 64.71L13.79 64.78L13.8 64.84L13.8 64.91L13.81 64.97L13.81 65.04L13.82 65.1L13.82 65.17L13.85 65.38L13.85 65.51L13.86 65.57L13.87 65.64L13.87 65.7L13.88 65.77L13.89 65.82L13.9 65.9L13.9 65.92L13.91 65.95L13.91 66.05L13.9 66.07L13.9 66.12L13.89 66.15L13.89 66.18L13.87 66.22L13.86 66.25L13.86 66.27L13.85 66.3L13.84 66.32L13.83 66.35L13.82 66.36L13.81 66.39L13.79 66.41L13.77 66.45L13.76 66.48L13.73 66.51L13.71 66.54L13.6 66.65L13.56 66.68L13.54 66.69L13.52 66.71L13.49 66.72L13.45 66.74L13.42 66.76L13.4 66.77L13.32 66.8L13.31 66.8L13.23 66.83L13.2 66.83L13.17 66.84L13.13 66.84L13.1 66.85L13 66.85L12.97 66.84L12.92 66.84L12.89 66.83L12.87 66.83L12.85 66.82L12.82 66.82L12.78 66.8L12.76 66.8L12.71 66.78L12.69 66.77L12.66 66.75L12.62 66.73L12.59 66.72L12.58 66.7L12.55 66.69L12.51 66.65L12.49 66.64L12.07 66.28L11.67 65.92L11.28 65.56L10.89 65.18L10.51 64.8L10.15 64.42L9.79 64.02L9.1 63.21L8.45 62.36L8.14 61.94L7.84 61.5L7.55 61.07L7.27 60.62L7 60.16L6.74 59.71L6.24 58.78L5.79 57.82L5.58 57.35L5.38 56.85L5.01 55.88L4.84 55.38L4.69 54.87L4.54 54.36L4.28 53.35L4.16 52.84L4.06 52.31L3.97 51.8L3.89 51.27L3.82 50.75L3.75 50.21L3.71 49.68L3.68 49.15L3.64 48.09L3.66 47.51L3.68 46.96L3.72 46.4L3.77 45.85L3.83 45.29L3.9 44.75L4 44.19L4.1 43.65L4.21 43.11L4.34 42.57L4.48 42.03L4.63 41.5L4.78 40.98L4.95 40.45L5.33 39.42L5.54 38.91L5.76 38.4L5.98 37.91L6.23 37.41L6.48 36.92L6.74 36.44L7.01 35.95L7.3 35.49L7.6 35.02L8.21 34.11L8.88 33.22L9.59 32.36L9.96 31.94L10.34 31.53L10.72 31.12L11.12 30.74L11.54 30.35L12.37 29.6L12.8 29.24L13.25 28.89L13.53 28.68L14.34 28.07L15.17 27.51L15.47 27.32L15.75 27.14L16.32 26.78L16.62 26.61L16.91 26.44L17.5 26.12L17.8 25.96L18.11 25.81L18.41 25.65L18.71 25.51L19.02 25.36L19.64 25.09L19.94 24.96L20.26 24.82L21.2 24.45L21.53 24.34L21.85 24.22L22.49 24.02L23.15 23.82L23.79 23.64L24.45 23.47L24.79 23.39L25.46 23.25L26.19 23.14L26.44 23.11L26.91 23.05L27.16 23.02L27.65 22.96L27.89 22.94L28.88 22.83L29.12 22.81L29.61 22.76L29.86 22.74L30.1 22.72L30.34 22.7L30.59 22.67L31.33 22.62L31.57 22.6L32.55 22.53L33.05 22.51L33.29 22.5L33.54 22.48L34.02 22.46L34.28 22.44L35.26 22.41L35.26 15.62L35.27 15.6L35.27 15.55L35.28 15.53L35.28 15.46L35.29 15.44L35.31 15.39L35.32 15.37L35.33 15.34L35.35 15.3L35.35 15.28L35.37 15.26L35.38 15.24L35.4 15.22L35.41 15.2L35.43 15.17L35.43 15.16L35.56 15.03L35.58 15.02L35.61 14.99L35.64 14.98L35.65 14.96L35.67 14.95L35.7 14.94L35.76 14.91L35.79 14.89L35.83 14.87L35.88 14.87L35.9 14.86L35.93 14.85L35.95 14.85L35.97 14.85L36.02 14.85L36.04 14.84L36.18 14.84L36.21 14.85L36.26 14.85ZM36.97 23.25L36.97 23.33L36.92 23.51L36.89 23.58L36.88 23.61L36.8 23.73L36.77 23.76L36.76 23.78L36.68 23.86L36.65 23.88L36.61 23.91L36.55 23.94L36.53 23.96L36.46 24L36.43 24L36.39 24.02L36.32 24.04L36.24 24.06L36.21 24.06L36.17 24.07L36.13 24.07L35.27 24.09L34.98 24.1L34.7 24.12L34.41 24.12L34.12 24.14L33.83 24.14L32.97 24.2L32.68 24.21L31.25 24.31L30.97 24.33L29.81 24.44L29.53 24.46L28.96 24.51L28.67 24.55L28.38 24.58L28.09 24.6L27.81 24.64L27.53 24.67L26.95 24.74L26.68 24.78L26.09 24.85L25.81 24.89L24.76 25.12L24.42 25.21L23.73 25.4L23.39 25.49L22.72 25.71L22.38 25.83L22.05 25.94L21.38 26.19L20.73 26.44L20.07 26.73L19.43 27.03L18.8 27.34L18.17 27.67L17.55 28.01L16.95 28.38L16.65 28.57L15.76 29.14L15.47 29.34L14.89 29.77L14.61 29.97L14.33 30.19L13.87 30.56L13.41 30.94L12.97 31.32L12.55 31.71L12.13 32.12L11.72 32.53L11.33 32.96L10.95 33.38L10.57 33.83L10.21 34.28L9.86 34.73L9.21 35.67L8.89 36.15L8.59 36.64L8.3 37.12L7.77 38.13L7.52 38.65L7.28 39.17L7.06 39.69L6.65 40.76L6.47 41.3L6.3 41.84L6.14 42.39L6 42.94L5.87 43.5L5.76 44.06L5.66 44.63L5.57 45.2L5.5 45.77L5.4 46.92L5.37 47.5L5.36 48.09L5.37 48.57L5.41 49.57L5.45 50.05L5.5 50.55L5.56 51.02L5.63 51.51L5.71 51.99L5.81 52.48L5.9 52.95L6.02 53.42L6.14 53.89L6.28 54.36L6.58 55.3L6.74 55.74L7.09 56.65L7.29 57.1L7.5 57.55L7.71 57.98L8.16 58.85L8.41 59.27L8.66 59.69L8.93 60.1L9.2 60.51L9.47 60.92L9.76 61.3L10.06 61.7L10.37 62.09L10.68 62.47L11.35 63.21L11.69 63.57L12.04 63.92L12.04 63.39L12.03 63.35L12.03 62.99L12.06 61.94L12.1 61.4L12.13 61.15L12.15 60.89L12.18 60.63L12.29 59.84L12.33 59.59L12.37 59.32L12.43 59.06L12.53 58.56L12.59 58.29L12.72 57.78L12.85 57.28L13.01 56.77L13.09 56.53L13.17 56.27L13.25 56.03L13.35 55.77L13.44 55.52L13.54 55.29L13.74 54.79L13.96 54.31L14.06 54.07L14.46 53.31L14.88 52.58L15.11 52.22L15.32 51.87L15.55 51.51L15.8 51.16L16.04 50.81L16.29 50.48L16.54 50.14L16.81 49.8L17.07 49.49L17.35 49.16L17.62 48.84L18.49 47.92L18.78 47.62L19.09 47.32L19.4 47.04L19.71 46.76L20.03 46.47L20.36 46.2L20.68 45.95L21.01 45.68L21.35 45.42L21.7 45.17L22.39 44.69L23.12 44.23L23.48 44L23.85 43.8L24.59 43.37L24.87 43.23L25.14 43.08L25.42 42.95L25.97 42.68L26.25 42.57L26.53 42.46L27.11 42.23L27.4 42.12L27.99 41.92L28.29 41.83L28.9 41.65L29.2 41.57L29.52 41.49L30.16 41.36L30.8 41.24L31.13 41.19L31.45 41.13L32.14 41.05L32.82 40.98L33.17 40.94L33.53 40.91L33.88 40.9L34.24 40.87L34.61 40.86L34.98 40.84L35.36 40.84L35.74 40.83L36.16 40.83L36.2 40.84L36.24 40.84L36.31 40.86L36.39 40.88L36.42 40.9L36.46 40.91L36.48 40.92L36.55 40.96L36.58 40.98L36.61 40.99L36.64 41.02L36.67 41.04L36.77 41.14L36.79 41.17L36.82 41.2L36.84 41.23L36.85 41.26L36.89 41.32L36.91 41.36L36.91 41.39L36.93 41.43L36.97 41.56L36.97 41.64L36.98 41.67L36.98 47.38L54.47 32.45L36.98 17.51L36.98 23.22L36.97 23.25Z\",\n  id: \"a3kelxcGm\"\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#c6NhwuO2LB\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 1\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#c6NhwuO2LB\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#f1ZFKhZbc3\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#f1ZFKhZbc3\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#grNqosIIg\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#grNqosIIg\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#a3kelxcGm\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#a3kelxcGm\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n})))));\n\nvar SvgRedo = function SvgRedo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"0 0 95.82 95.82\",\n    width: 95.82,\n    height: 95.82,\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgRedo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/redo.8f8ab8f2.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"path\", {\n  d: \"M40.59 15.76L40.62 15.77L40.64 15.78L40.67 15.78L40.82 15.83L40.84 15.84L40.87 15.86L40.9 15.87L40.93 15.88L40.96 15.9L40.98 15.92L41.01 15.93L41.03 15.95L41.06 15.97L41.08 15.98L41.12 16.02L41.15 16.04L41.17 16.06L41.19 16.1L41.21 16.12L41.22 16.14L41.24 16.16L41.26 16.19L41.28 16.21L41.29 16.23L41.31 16.26L41.32 16.28L41.34 16.31L41.35 16.34L41.36 16.36L41.37 16.39L41.39 16.42L41.4 16.44L41.41 16.47L41.41 16.5L41.43 16.56L41.44 16.58L41.44 16.61L41.45 16.64L41.45 16.7L41.46 16.74L41.46 25.22L41.76 25.23L42.06 25.24L42.37 25.26L42.67 25.27L42.97 25.28L43.27 25.3L43.58 25.31L43.87 25.33L44.18 25.34L44.78 25.38L45.08 25.39L45.69 25.43L45.98 25.46L46.59 25.5L46.89 25.52L47.19 25.55L47.49 25.57L48.1 25.63L48.39 25.65L49 25.71L49.29 25.74L49.6 25.77L49.89 25.81L50.2 25.85L50.49 25.88L50.8 25.92L51.09 25.95L51.4 25.99L51.7 26.02L52 26.06L52.3 26.1L52.89 26.18L53.19 26.22L53.49 26.26L53.9 26.35L54.31 26.44L55.53 26.75L55.93 26.86L56.33 26.98L57.12 27.23L57.92 27.49L58.31 27.63L58.7 27.78L59.09 27.93L59.48 28.08L59.87 28.24L60.25 28.39L60.63 28.57L61.01 28.74L61.39 28.91L62.14 29.28L62.51 29.46L62.88 29.65L63.61 30.06L63.97 30.26L64.34 30.47L64.69 30.69L65.05 30.9L65.4 31.13L65.75 31.35L66.1 31.58L66.45 31.82L66.78 32.06L67.13 32.3L67.46 32.55L68.13 33.06L68.46 33.31L69.01 33.76L69.55 34.2L70.58 35.14L71.08 35.63L71.57 36.11L72.04 36.62L72.96 37.66L73.39 38.19L73.82 38.73L74.24 39.28L74.64 39.84L75.03 40.41L75.41 40.98L75.77 41.57L76.12 42.16L76.45 42.76L76.78 43.35L77.08 43.96L77.38 44.58L77.66 45.21L77.93 45.84L78.19 46.48L78.42 47.12L78.65 47.77L78.86 48.42L79.06 49.08L79.24 49.74L79.41 50.41L79.56 51.09L79.7 51.76L79.82 52.44L79.93 53.14L80.02 53.82L80.1 54.51L80.16 55.21L80.21 55.9L80.24 56.6L80.25 57.3L80.24 57.97L80.21 58.64L80.17 59.3L80.11 59.97L80.04 60.63L79.96 61.28L79.85 61.94L79.74 62.59L79.62 63.24L79.48 63.88L79.33 64.52L79.16 65.16L78.98 65.79L78.79 66.42L78.58 67.04L78.36 67.66L78.13 68.27L77.88 68.88L77.62 69.49L77.36 70.08L77.07 70.66L76.78 71.25L76.46 71.83L76.15 72.4L75.81 72.97L75.47 73.53L75.11 74.08L74.36 75.15L73.96 75.68L73.56 76.2L73.14 76.72L72.71 77.22L72.28 77.71L71.83 78.2L71.36 78.68L70.9 79.15L70.41 79.6L69.91 80.06L69.41 80.5L69.38 80.52L69.36 80.54L69.3 80.58L69.28 80.59L69.25 80.61L69.22 80.62L69.2 80.64L69.14 80.66L69.11 80.68L68.99 80.72L68.96 80.72L68.9 80.74L68.83 80.74L68.8 80.75L68.62 80.75L68.59 80.74L68.56 80.74L68.53 80.73L68.5 80.73L68.29 80.66L68.26 80.64L68.22 80.63L68.19 80.61L68.17 80.6L68.11 80.56L68.09 80.54L68.06 80.52L68.02 80.48L67.99 80.46L67.93 80.39L67.91 80.36L67.89 80.34L67.87 80.31L67.85 80.29L67.84 80.26L67.82 80.24L67.81 80.21L67.79 80.18L67.78 80.16L67.77 80.13L67.75 80.1L67.71 79.98L67.71 79.95L67.69 79.89L67.69 79.86L67.68 79.83L67.68 79.57L67.72 79.25L67.73 79.16L67.75 78.99L67.75 78.91L67.78 78.67L67.78 78.59L67.79 78.5L67.79 78.41L67.81 78.25L67.81 78.17L67.82 78.09L67.82 78.01L67.83 77.92L67.83 77.75L67.84 77.67L67.84 77.59L67.85 77.51L67.85 77.26L67.86 77.18L67.86 76.85L67.87 76.76L67.87 75.99L67.86 75.71L67.86 75.44L67.85 75.17L67.84 74.9L67.82 74.63L67.81 74.35L67.79 74.08L67.76 73.8L67.74 73.54L67.68 72.99L67.64 72.73L67.55 72.18L67.51 71.91L67.46 71.65L67.41 71.38L67.31 70.85L67.25 70.57L67.19 70.31L67.12 70.05L67.06 69.78L66.99 69.52L66.9 69.25L66.83 69L66.67 68.47L66.58 68.22L66.5 67.95L66.32 67.45L65.91 66.43L65.69 65.92L65.57 65.68L65.17 64.89L64.95 64.5L64.73 64.11L64.28 63.36L64.05 62.99L63.56 62.26L63.06 61.54L62.79 61.19L62.53 60.84L61.98 60.15L61.69 59.82L61.4 59.49L61.12 59.17L60.81 58.84L60.52 58.53L59.9 57.91L59.57 57.6L59.26 57.31L58.93 57.01L57.93 56.16L57.58 55.89L57.23 55.62L56.88 55.36L56.53 55.11L56.16 54.85L55.43 54.36L54.68 53.9L54.29 53.67L53.91 53.46L53.52 53.25L53.24 53.1L52.96 52.95L52.68 52.82L52.4 52.68L52.11 52.55L51.54 52.3L51.24 52.18L50.96 52.06L50.37 51.84L49.49 51.53L49.18 51.44L48.89 51.35L48.58 51.27L48.28 51.18L47.98 51.1L47.68 51.02L47.37 50.95L47.07 50.89L46.76 50.82L46.45 50.77L46.15 50.71L45.84 50.66L45.53 50.61L45.22 50.57L44.59 50.48L44.29 50.45L43.97 50.43L43.66 50.4L43.34 50.38L43.04 50.37L42.72 50.35L42.41 50.35L42.09 50.34L41.46 50.34L41.46 58.79L41.45 58.82L41.45 58.88L41.44 58.91L41.44 58.94L41.41 59.04L41.41 59.06L41.39 59.12L41.37 59.15L41.36 59.17L41.34 59.23L41.32 59.25L41.31 59.28L41.29 59.3L41.28 59.33L41.24 59.37L41.22 59.4L41.21 59.42L41.15 59.48L41.12 59.5L41.06 59.56L41.03 59.58L41.01 59.59L40.98 59.61L40.96 59.64L40.93 59.65L40.9 59.67L40.84 59.69L40.82 59.7L40.79 59.72L40.73 59.74L40.7 59.74L40.64 59.76L40.62 59.77L40.59 59.77L40.56 59.78L40.44 59.78L40.41 59.79L40.38 59.78L40.3 59.78L40.26 59.77L40.23 59.77L40.2 59.76L40.17 59.76L40.11 59.74L40.09 59.73L40.06 59.73L40.03 59.72L40 59.7L39.98 59.69L39.92 59.67L39.9 59.65L39.87 59.64L39.85 59.61L39.82 59.6L39.8 59.58L39.77 59.56L39.73 59.52L15.62 38.56L15.6 38.54L15.58 38.53L15.56 38.51L15.54 38.5L15.53 38.48L15.48 38.43L15.47 38.41L15.44 38.38L15.41 38.32L15.39 38.3L15.37 38.26L15.36 38.25L15.33 38.19L15.33 38.16L15.32 38.14L15.31 38.11L15.3 38.09L15.3 38.07L15.28 38.03L15.28 38.01L15.27 37.99L15.27 37.94L15.26 37.92L15.26 37.88L15.25 37.86L15.25 37.68L15.26 37.66L15.26 37.61L15.27 37.59L15.27 37.55L15.28 37.53L15.28 37.49L15.3 37.45L15.3 37.43L15.33 37.37L15.33 37.35L15.39 37.23L15.41 37.21L15.42 37.19L15.43 37.18L15.45 37.14L15.5 37.09L15.51 37.07L15.53 37.06L15.54 37.04L15.6 36.99L15.62 36.98L39.73 16L39.77 15.96L39.8 15.95L39.82 15.93L39.85 15.91L39.87 15.9L39.9 15.88L39.92 15.87L39.95 15.86L39.98 15.84L40 15.83L40.09 15.8L40.11 15.79L40.14 15.78L40.17 15.78L40.2 15.77L40.23 15.77L40.26 15.76L40.3 15.76L40.32 15.75L40.5 15.75L40.53 15.76L40.59 15.76ZM39.36 56.44L39.36 49.26L39.37 49.2L39.37 49.16L39.39 49.08L39.39 49.03L39.41 48.99L39.43 48.91L39.45 48.87L39.47 48.84L39.51 48.76L39.53 48.73L39.55 48.69L39.58 48.66L39.6 48.63L39.76 48.47L39.79 48.45L39.83 48.43L39.86 48.4L39.94 48.36L39.97 48.34L40.01 48.33L40.05 48.31L40.17 48.28L40.22 48.27L40.31 48.25L40.83 48.25L41.59 48.23L41.96 48.23L43.09 48.26L43.46 48.28L43.83 48.31L44.58 48.37L44.96 48.42L45.32 48.46L45.7 48.51L46.8 48.7L47.17 48.77L47.54 48.85L47.89 48.93L48.26 49.01L48.62 49.1L48.98 49.2L49.34 49.31L49.7 49.41L50.06 49.52L51.12 49.89L51.47 50.02L51.82 50.16L52.17 50.29L52.86 50.6L53.19 50.75L53.54 50.91L53.87 51.07L54.54 51.42L55.42 51.91L55.84 52.16L56.7 52.69L57.1 52.96L57.52 53.25L57.93 53.53L58.32 53.83L59.11 54.44L59.5 54.75L59.88 55.06L60.25 55.39L60.98 56.06L61.34 56.4L62.04 57.1L62.39 57.46L62.72 57.83L63.05 58.19L63.7 58.94L64 59.33L64.61 60.12L64.9 60.52L65.19 60.93L65.46 61.33L65.74 61.75L66.01 62.17L66.77 63.45L67.01 63.9L67.24 64.34L67.47 64.78L67.6 65.07L67.73 65.35L67.85 65.65L67.97 65.93L68.08 66.22L68.42 67.1L68.52 67.39L68.61 67.69L68.71 67.98L68.8 68.28L68.9 68.58L68.98 68.88L69.06 69.18L69.14 69.48L69.35 70.39L69.54 71.3L69.64 71.91L69.68 72.22L69.73 72.53L69.77 72.84L69.8 73.15L69.83 73.46L69.86 73.77L69.89 74.08L69.91 74.39L69.92 74.71L69.94 75.01L69.96 75.64L69.96 76.74L69.95 76.76L69.95 77.1L70.36 76.69L70.76 76.26L71.15 75.82L71.53 75.39L71.9 74.94L72.26 74.48L72.61 74.02L72.95 73.55L73.28 73.07L73.61 72.59L74.22 71.62L74.5 71.12L74.79 70.61L75.05 70.11L75.56 69.07L75.79 68.54L76.01 68.01L76.23 67.49L76.43 66.95L76.62 66.4L76.81 65.86L76.98 65.31L77.14 64.75L77.43 63.64L77.55 63.08L77.66 62.51L77.76 61.94L77.85 61.36L77.93 60.79L78.06 59.64L78.1 59.06L78.13 58.48L78.15 57.89L78.16 57.3L78.14 56.62L78.11 55.93L78.06 55.25L78 54.57L77.91 53.89L77.82 53.22L77.71 52.55L77.58 51.88L77.44 51.22L77.28 50.56L77.11 49.91L76.92 49.26L76.72 48.61L76.5 47.98L76.27 47.34L76.03 46.72L75.76 46.1L75.49 45.48L75.19 44.87L74.89 44.27L74.57 43.68L74.24 43.09L73.89 42.51L73.54 41.94L73.16 41.38L72.78 40.84L72.38 40.29L71.96 39.75L71.54 39.22L71.1 38.71L70.65 38.21L70.19 37.71L69.71 37.22L69.22 36.74L68.72 36.28L68.2 35.82L67.69 35.38L67.15 34.95L66.82 34.69L66.15 34.18L65.82 33.94L65.48 33.71L65.15 33.46L64.8 33.24L64.46 33.01L64.1 32.78L63.76 32.57L63.05 32.14L62.69 31.94L62.32 31.74L61.59 31.35L60.86 30.98L60.49 30.8L60.11 30.63L59.73 30.47L59.36 30.29L58.97 30.14L58.6 29.98L58.21 29.84L57.83 29.68L57.44 29.54L57.04 29.41L56.66 29.28L55.47 28.91L55.07 28.8L54.67 28.69L54.27 28.59L53.05 28.31L52.72 28.27L52.39 28.22L51.72 28.14L51.4 28.1L50.73 28.02L50.4 27.98L50.07 27.95L49.73 27.91L49.4 27.88L49.07 27.84L47.73 27.71L47.4 27.68L46.73 27.62L46.4 27.6L46.06 27.57L45.73 27.55L45.4 27.52L43.39 27.4L43.06 27.39L42.72 27.37L42.4 27.36L42.06 27.34L41.39 27.32L41.06 27.3L40.39 27.28L40.3 27.28L40.25 27.27L40.21 27.27L40.17 27.26L40.12 27.25L40.08 27.23L40.04 27.22L40.01 27.21L39.89 27.15L39.86 27.13L39.82 27.1L39.79 27.07L39.76 27.05L39.6 26.9L39.58 26.87L39.55 26.84L39.53 26.8L39.51 26.77L39.49 26.73L39.47 26.7L39.43 26.62L39.41 26.54L39.39 26.5L39.38 26.45L39.38 26.41L39.37 26.36L39.37 26.32L39.36 26.28L39.36 19.1L17.9 37.77L39.36 56.44Z\",\n  id: \"cGgTj3PDL\"\n}), React.createElement(\"path\", {\n  d: \"M40.59 15.76L40.62 15.77L40.64 15.78L40.67 15.78L40.82 15.83L40.84 15.84L40.87 15.86L40.9 15.87L40.93 15.88L40.96 15.9L40.98 15.92L41.01 15.93L41.03 15.95L41.06 15.97L41.08 15.98L41.12 16.02L41.15 16.04L41.17 16.06L41.19 16.1L41.21 16.12L41.22 16.14L41.24 16.16L41.26 16.19L41.28 16.21L41.29 16.23L41.31 16.26L41.32 16.28L41.34 16.31L41.35 16.34L41.36 16.36L41.37 16.39L41.39 16.42L41.4 16.44L41.41 16.47L41.41 16.5L41.43 16.56L41.44 16.58L41.44 16.61L41.45 16.64L41.45 16.7L41.46 16.74L41.46 25.22L41.76 25.23L42.06 25.24L42.37 25.26L42.67 25.27L42.97 25.28L43.27 25.3L43.58 25.31L43.87 25.33L44.18 25.34L44.78 25.38L45.08 25.39L45.69 25.43L45.98 25.46L46.59 25.5L46.89 25.52L47.19 25.55L47.49 25.57L48.1 25.63L48.39 25.65L49 25.71L49.29 25.74L49.6 25.77L49.89 25.81L50.2 25.85L50.49 25.88L50.8 25.92L51.09 25.95L51.4 25.99L51.7 26.02L52 26.06L52.3 26.1L52.89 26.18L53.19 26.22L53.49 26.26L53.9 26.35L54.31 26.44L55.53 26.75L55.93 26.86L56.33 26.98L57.12 27.23L57.92 27.49L58.31 27.63L58.7 27.78L59.09 27.93L59.48 28.08L59.87 28.24L60.25 28.39L60.63 28.57L61.01 28.74L61.39 28.91L62.14 29.28L62.51 29.46L62.88 29.65L63.61 30.06L63.97 30.26L64.34 30.47L64.69 30.69L65.05 30.9L65.4 31.13L65.75 31.35L66.1 31.58L66.45 31.82L66.78 32.06L67.13 32.3L67.46 32.55L68.13 33.06L68.46 33.31L69.01 33.76L69.55 34.2L70.58 35.14L71.08 35.63L71.57 36.11L72.04 36.62L72.96 37.66L73.39 38.19L73.82 38.73L74.24 39.28L74.64 39.84L75.03 40.41L75.41 40.98L75.77 41.57L76.12 42.16L76.45 42.76L76.78 43.35L77.08 43.96L77.38 44.58L77.66 45.21L77.93 45.84L78.19 46.48L78.42 47.12L78.65 47.77L78.86 48.42L79.06 49.08L79.24 49.74L79.41 50.41L79.56 51.09L79.7 51.76L79.82 52.44L79.93 53.14L80.02 53.82L80.1 54.51L80.16 55.21L80.21 55.9L80.24 56.6L80.25 57.3L80.24 57.97L80.21 58.64L80.17 59.3L80.11 59.97L80.04 60.63L79.96 61.28L79.85 61.94L79.74 62.59L79.62 63.24L79.48 63.88L79.33 64.52L79.16 65.16L78.98 65.79L78.79 66.42L78.58 67.04L78.36 67.66L78.13 68.27L77.88 68.88L77.62 69.49L77.36 70.08L77.07 70.66L76.78 71.25L76.46 71.83L76.15 72.4L75.81 72.97L75.47 73.53L75.11 74.08L74.36 75.15L73.96 75.68L73.56 76.2L73.14 76.72L72.71 77.22L72.28 77.71L71.83 78.2L71.36 78.68L70.9 79.15L70.41 79.6L69.91 80.06L69.41 80.5L69.38 80.52L69.36 80.54L69.3 80.58L69.28 80.59L69.25 80.61L69.22 80.62L69.2 80.64L69.14 80.66L69.11 80.68L68.99 80.72L68.96 80.72L68.9 80.74L68.83 80.74L68.8 80.75L68.62 80.75L68.59 80.74L68.56 80.74L68.53 80.73L68.5 80.73L68.29 80.66L68.26 80.64L68.22 80.63L68.19 80.61L68.17 80.6L68.11 80.56L68.09 80.54L68.06 80.52L68.02 80.48L67.99 80.46L67.93 80.39L67.91 80.36L67.89 80.34L67.87 80.31L67.85 80.29L67.84 80.26L67.82 80.24L67.81 80.21L67.79 80.18L67.78 80.16L67.77 80.13L67.75 80.1L67.71 79.98L67.71 79.95L67.69 79.89L67.69 79.86L67.68 79.83L67.68 79.57L67.72 79.25L67.73 79.16L67.75 78.99L67.75 78.91L67.78 78.67L67.78 78.59L67.79 78.5L67.79 78.41L67.81 78.25L67.81 78.17L67.82 78.09L67.82 78.01L67.83 77.92L67.83 77.75L67.84 77.67L67.84 77.59L67.85 77.51L67.85 77.26L67.86 77.18L67.86 76.85L67.87 76.76L67.87 75.99L67.86 75.71L67.86 75.44L67.85 75.17L67.84 74.9L67.82 74.63L67.81 74.35L67.79 74.08L67.76 73.8L67.74 73.54L67.68 72.99L67.64 72.73L67.55 72.18L67.51 71.91L67.46 71.65L67.41 71.38L67.31 70.85L67.25 70.57L67.19 70.31L67.12 70.05L67.06 69.78L66.99 69.52L66.9 69.25L66.83 69L66.67 68.47L66.58 68.22L66.5 67.95L66.32 67.45L65.91 66.43L65.69 65.92L65.57 65.68L65.17 64.89L64.95 64.5L64.73 64.11L64.28 63.36L64.05 62.99L63.56 62.26L63.06 61.54L62.79 61.19L62.53 60.84L61.98 60.15L61.69 59.82L61.4 59.49L61.12 59.17L60.81 58.84L60.52 58.53L59.9 57.91L59.57 57.6L59.26 57.31L58.93 57.01L57.93 56.16L57.58 55.89L57.23 55.62L56.88 55.36L56.53 55.11L56.16 54.85L55.43 54.36L54.68 53.9L54.29 53.67L53.91 53.46L53.52 53.25L53.24 53.1L52.96 52.95L52.68 52.82L52.4 52.68L52.11 52.55L51.54 52.3L51.24 52.18L50.96 52.06L50.37 51.84L49.49 51.53L49.18 51.44L48.89 51.35L48.58 51.27L48.28 51.18L47.98 51.1L47.68 51.02L47.37 50.95L47.07 50.89L46.76 50.82L46.45 50.77L46.15 50.71L45.84 50.66L45.53 50.61L45.22 50.57L44.59 50.48L44.29 50.45L43.97 50.43L43.66 50.4L43.34 50.38L43.04 50.37L42.72 50.35L42.41 50.35L42.09 50.34L41.46 50.34L41.46 58.79L41.45 58.82L41.45 58.88L41.44 58.91L41.44 58.94L41.41 59.04L41.41 59.06L41.39 59.12L41.37 59.15L41.36 59.17L41.34 59.23L41.32 59.25L41.31 59.28L41.29 59.3L41.28 59.33L41.24 59.37L41.22 59.4L41.21 59.42L41.15 59.48L41.12 59.5L41.06 59.56L41.03 59.58L41.01 59.59L40.98 59.61L40.96 59.64L40.93 59.65L40.9 59.67L40.84 59.69L40.82 59.7L40.79 59.72L40.73 59.74L40.7 59.74L40.64 59.76L40.62 59.77L40.59 59.77L40.56 59.78L40.44 59.78L40.41 59.79L40.38 59.78L40.3 59.78L40.26 59.77L40.23 59.77L40.2 59.76L40.17 59.76L40.11 59.74L40.09 59.73L40.06 59.73L40.03 59.72L40 59.7L39.98 59.69L39.92 59.67L39.9 59.65L39.87 59.64L39.85 59.61L39.82 59.6L39.8 59.58L39.77 59.56L39.73 59.52L15.62 38.56L15.6 38.54L15.58 38.53L15.56 38.51L15.54 38.5L15.53 38.48L15.48 38.43L15.47 38.41L15.44 38.38L15.41 38.32L15.39 38.3L15.37 38.26L15.36 38.25L15.33 38.19L15.33 38.16L15.32 38.14L15.31 38.11L15.3 38.09L15.3 38.07L15.28 38.03L15.28 38.01L15.27 37.99L15.27 37.94L15.26 37.92L15.26 37.88L15.25 37.86L15.25 37.68L15.26 37.66L15.26 37.61L15.27 37.59L15.27 37.55L15.28 37.53L15.28 37.49L15.3 37.45L15.3 37.43L15.33 37.37L15.33 37.35L15.39 37.23L15.41 37.21L15.42 37.19L15.43 37.18L15.45 37.14L15.5 37.09L15.51 37.07L15.53 37.06L15.54 37.04L15.6 36.99L15.62 36.98L39.73 16L39.77 15.96L39.8 15.95L39.82 15.93L39.85 15.91L39.87 15.9L39.9 15.88L39.92 15.87L39.95 15.86L39.98 15.84L40 15.83L40.09 15.8L40.11 15.79L40.14 15.78L40.17 15.78L40.2 15.77L40.23 15.77L40.26 15.76L40.3 15.76L40.32 15.75L40.5 15.75L40.53 15.76L40.59 15.76ZM39.36 56.44L39.36 49.26L39.37 49.2L39.37 49.16L39.39 49.08L39.39 49.03L39.41 48.99L39.43 48.91L39.45 48.87L39.47 48.84L39.51 48.76L39.53 48.73L39.55 48.69L39.58 48.66L39.6 48.63L39.76 48.47L39.79 48.45L39.83 48.43L39.86 48.4L39.94 48.36L39.97 48.34L40.01 48.33L40.05 48.31L40.17 48.28L40.22 48.27L40.31 48.25L40.83 48.25L41.59 48.23L41.96 48.23L43.09 48.26L43.46 48.28L43.83 48.31L44.58 48.37L44.96 48.42L45.32 48.46L45.7 48.51L46.8 48.7L47.17 48.77L47.54 48.85L47.89 48.93L48.26 49.01L48.62 49.1L48.98 49.2L49.34 49.31L49.7 49.41L50.06 49.52L51.12 49.89L51.47 50.02L51.82 50.16L52.17 50.29L52.86 50.6L53.19 50.75L53.54 50.91L53.87 51.07L54.54 51.42L55.42 51.91L55.84 52.16L56.7 52.69L57.1 52.96L57.52 53.25L57.93 53.53L58.32 53.83L59.11 54.44L59.5 54.75L59.88 55.06L60.25 55.39L60.98 56.06L61.34 56.4L62.04 57.1L62.39 57.46L62.72 57.83L63.05 58.19L63.7 58.94L64 59.33L64.61 60.12L64.9 60.52L65.19 60.93L65.46 61.33L65.74 61.75L66.01 62.17L66.77 63.45L67.01 63.9L67.24 64.34L67.47 64.78L67.6 65.07L67.73 65.35L67.85 65.65L67.97 65.93L68.08 66.22L68.42 67.1L68.52 67.39L68.61 67.69L68.71 67.98L68.8 68.28L68.9 68.58L68.98 68.88L69.06 69.18L69.14 69.48L69.35 70.39L69.54 71.3L69.64 71.91L69.68 72.22L69.73 72.53L69.77 72.84L69.8 73.15L69.83 73.46L69.86 73.77L69.89 74.08L69.91 74.39L69.92 74.71L69.94 75.01L69.96 75.64L69.96 76.74L69.95 76.76L69.95 77.1L70.36 76.69L70.76 76.26L71.15 75.82L71.53 75.39L71.9 74.94L72.26 74.48L72.61 74.02L72.95 73.55L73.28 73.07L73.61 72.59L74.22 71.62L74.5 71.12L74.79 70.61L75.05 70.11L75.56 69.07L75.79 68.54L76.01 68.01L76.23 67.49L76.43 66.95L76.62 66.4L76.81 65.86L76.98 65.31L77.14 64.75L77.43 63.64L77.55 63.08L77.66 62.51L77.76 61.94L77.85 61.36L77.93 60.79L78.06 59.64L78.1 59.06L78.13 58.48L78.15 57.89L78.16 57.3L78.14 56.62L78.11 55.93L78.06 55.25L78 54.57L77.91 53.89L77.82 53.22L77.71 52.55L77.58 51.88L77.44 51.22L77.28 50.56L77.11 49.91L76.92 49.26L76.72 48.61L76.5 47.98L76.27 47.34L76.03 46.72L75.76 46.1L75.49 45.48L75.19 44.87L74.89 44.27L74.57 43.68L74.24 43.09L73.89 42.51L73.54 41.94L73.16 41.38L72.78 40.84L72.38 40.29L71.96 39.75L71.54 39.22L71.1 38.71L70.65 38.21L70.19 37.71L69.71 37.22L69.22 36.74L68.72 36.28L68.2 35.82L67.69 35.38L67.15 34.95L66.82 34.69L66.15 34.18L65.82 33.94L65.48 33.71L65.15 33.46L64.8 33.24L64.46 33.01L64.1 32.78L63.76 32.57L63.05 32.14L62.69 31.94L62.32 31.74L61.59 31.35L60.86 30.98L60.49 30.8L60.11 30.63L59.73 30.47L59.36 30.29L58.97 30.14L58.6 29.98L58.21 29.84L57.83 29.68L57.44 29.54L57.04 29.41L56.66 29.28L55.47 28.91L55.07 28.8L54.67 28.69L54.27 28.59L53.05 28.31L52.72 28.27L52.39 28.22L51.72 28.14L51.4 28.1L50.73 28.02L50.4 27.98L50.07 27.95L49.73 27.91L49.4 27.88L49.07 27.84L47.73 27.71L47.4 27.68L46.73 27.62L46.4 27.6L46.06 27.57L45.73 27.55L45.4 27.52L43.39 27.4L43.06 27.39L42.72 27.37L42.4 27.36L42.06 27.34L41.39 27.32L41.06 27.3L40.39 27.28L40.3 27.28L40.25 27.27L40.21 27.27L40.17 27.26L40.12 27.25L40.08 27.23L40.04 27.22L40.01 27.21L39.89 27.15L39.86 27.13L39.82 27.1L39.79 27.07L39.76 27.05L39.6 26.9L39.58 26.87L39.55 26.84L39.53 26.8L39.51 26.77L39.49 26.73L39.47 26.7L39.43 26.62L39.41 26.54L39.39 26.5L39.38 26.45L39.38 26.41L39.37 26.36L39.37 26.32L39.36 26.28L39.36 19.1L17.9 37.77L39.36 56.44Z\",\n  id: \"gjuf0iOPN\"\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#cGgTj3PDL\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 1\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#cGgTj3PDL\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#gjuf0iOPN\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#gjuf0iOPN\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n})))));\n\nvar SvgUndo = function SvgUndo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"0 0 95.82 95.82\",\n    width: 95.82,\n    height: 95.82,\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgUndo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/undo.7d68f9a3.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"path\", {\n  d: \"M17.75 20.48L17.92 20.53L18.08 20.6L18.23 20.69L18.39 20.79L18.53 20.93L18.68 21.07L41.53 47.07L41.69 47.27L41.75 47.38L41.82 47.49L41.87 47.61L41.92 47.73L42.01 47.97L42.04 48.09L42.06 48.23L42.08 48.35L42.09 48.48L42.09 48.73L42.08 48.86L42.06 48.99L42.04 49.11L42.01 49.23L41.92 49.48L41.87 49.6L41.82 49.71L41.75 49.82L41.69 49.93L41.53 50.14L18.68 76.14L18.53 76.28L18.38 76.41L18.23 76.52L18.08 76.6L17.92 76.67L17.74 76.72L17.58 76.75L17.42 76.78L17.25 76.76L17.08 76.75L16.92 76.71L16.76 76.66L16.61 76.6L16.45 76.52L16.31 76.43L16.17 76.32L16.05 76.21L15.92 76.06L15.81 75.92L15.72 75.77L15.63 75.6L15.56 75.41L15.51 75.23L15.46 75.03L15.44 74.83L15.43 74.6L15.43 22.6L15.44 22.39L15.46 22.18L15.51 21.97L15.56 21.79L15.63 21.61L15.81 21.28L15.92 21.14L16.05 21.01L16.17 20.89L16.31 20.77L16.45 20.68L16.61 20.6L16.76 20.54L16.92 20.49L17.08 20.46L17.25 20.44L17.42 20.44L17.58 20.45L17.75 20.48ZM37.49 48.6L19.24 27.83L19.24 69.37L37.49 48.6Z\",\n  id: \"c640wI8z09\"\n}), React.createElement(\"path\", {\n  d: \"M17.75 20.48L17.92 20.53L18.08 20.6L18.23 20.69L18.39 20.79L18.53 20.93L18.68 21.07L41.53 47.07L41.69 47.27L41.75 47.38L41.82 47.49L41.87 47.61L41.92 47.73L42.01 47.97L42.04 48.09L42.06 48.23L42.08 48.35L42.09 48.48L42.09 48.73L42.08 48.86L42.06 48.99L42.04 49.11L42.01 49.23L41.92 49.48L41.87 49.6L41.82 49.71L41.75 49.82L41.69 49.93L41.53 50.14L18.68 76.14L18.53 76.28L18.38 76.41L18.23 76.52L18.08 76.6L17.92 76.67L17.74 76.72L17.58 76.75L17.42 76.78L17.25 76.76L17.08 76.75L16.92 76.71L16.76 76.66L16.61 76.6L16.45 76.52L16.31 76.43L16.17 76.32L16.05 76.21L15.92 76.06L15.81 75.92L15.72 75.77L15.63 75.6L15.56 75.41L15.51 75.23L15.46 75.03L15.44 74.83L15.43 74.6L15.43 22.6L15.44 22.39L15.46 22.18L15.51 21.97L15.56 21.79L15.63 21.61L15.81 21.28L15.92 21.14L16.05 21.01L16.17 20.89L16.31 20.77L16.45 20.68L16.61 20.6L16.76 20.54L16.92 20.49L17.08 20.46L17.25 20.44L17.42 20.44L17.58 20.45L17.75 20.48ZM37.49 48.6L19.24 27.83L19.24 69.37L37.49 48.6Z\",\n  id: \"asKI9ZhvY\"\n}), React.createElement(\"path\", {\n  d: \"M78.93 20.49L79.1 20.54L79.25 20.6L79.4 20.68L79.54 20.77L79.69 20.89L79.81 21.01L79.93 21.14L80.04 21.28L80.22 21.61L80.3 21.79L80.4 22.18L80.42 22.39L80.43 22.6L80.43 74.6L80.42 74.83L80.4 75.03L80.35 75.23L80.3 75.42L80.22 75.6L80.13 75.77L80.04 75.93L79.93 76.07L79.81 76.21L79.68 76.33L79.54 76.43L79.4 76.52L79.25 76.6L79.1 76.66L78.93 76.71L78.77 76.75L78.6 76.76L78.44 76.76L78.27 76.75L78.1 76.72L77.94 76.67L77.78 76.6L77.61 76.51L77.46 76.41L77.32 76.28L77.18 76.14L54.33 50.14L54.16 49.93L54.1 49.82L54.03 49.71L53.98 49.6L53.93 49.48L53.85 49.23L53.82 49.11L53.8 48.99L53.78 48.86L53.77 48.73L53.77 48.48L53.78 48.35L53.8 48.23L53.82 48.09L53.85 47.97L53.93 47.73L53.98 47.61L54.03 47.49L54.1 47.38L54.16 47.27L54.33 47.07L77.18 21.07L77.32 20.93L77.47 20.79L77.62 20.69L77.78 20.6L77.94 20.53L78.11 20.48L78.27 20.45L78.44 20.44L78.61 20.44L78.77 20.46L78.93 20.49ZM76.62 69.37L76.62 27.83L58.37 48.6L76.62 69.37Z\",\n  id: \"c3cijtHnvO\"\n}), React.createElement(\"path\", {\n  d: \"M78.93 20.49L79.1 20.54L79.25 20.6L79.4 20.68L79.54 20.77L79.69 20.89L79.81 21.01L79.93 21.14L80.04 21.28L80.22 21.61L80.3 21.79L80.4 22.18L80.42 22.39L80.43 22.6L80.43 74.6L80.42 74.83L80.4 75.03L80.35 75.23L80.3 75.42L80.22 75.6L80.13 75.77L80.04 75.93L79.93 76.07L79.81 76.21L79.68 76.33L79.54 76.43L79.4 76.52L79.25 76.6L79.1 76.66L78.93 76.71L78.77 76.75L78.6 76.76L78.44 76.76L78.27 76.75L78.1 76.72L77.94 76.67L77.78 76.6L77.61 76.51L77.46 76.41L77.32 76.28L77.18 76.14L54.33 50.14L54.16 49.93L54.1 49.82L54.03 49.71L53.98 49.6L53.93 49.48L53.85 49.23L53.82 49.11L53.8 48.99L53.78 48.86L53.77 48.73L53.77 48.48L53.78 48.35L53.8 48.23L53.82 48.09L53.85 47.97L53.93 47.73L53.98 47.61L54.03 47.49L54.1 47.38L54.16 47.27L54.33 47.07L77.18 21.07L77.32 20.93L77.47 20.79L77.62 20.69L77.78 20.6L77.94 20.53L78.11 20.48L78.27 20.45L78.44 20.44L78.61 20.44L78.77 20.46L78.93 20.49ZM76.62 69.37L76.62 27.83L58.37 48.6L76.62 69.37Z\",\n  id: \"b1knx2YYkm\"\n}), React.createElement(\"path\", {\n  d: \"M46.15 78.94C46.15 80.14 47 81.1 48.06 81.1C49.11 81.1 49.96 80.14 49.96 78.94C49.96 78.06 49.96 71.14 49.96 70.26C49.96 69.08 49.11 68.1 48.06 68.1C47 68.1 46.15 69.08 46.15 70.26C46.15 71.14 46.15 78.06 46.15 78.94Z\",\n  id: \"didD5clI\"\n}), React.createElement(\"path\", {\n  d: \"M46.15 78.94C46.15 80.14 47 81.1 48.06 81.1C49.11 81.1 49.96 80.14 49.96 78.94C49.96 78.06 49.96 71.14 49.96 70.26C49.96 69.08 49.11 68.1 48.06 68.1C47 68.1 46.15 69.08 46.15 70.26C46.15 71.14 46.15 78.06 46.15 78.94Z\",\n  id: \"b2HAE14Bw\"\n}), React.createElement(\"path\", {\n  d: \"M46.15 61.6C46.15 62.8 47 63.76 48.06 63.76C49.11 63.76 49.96 62.8 49.96 61.6C49.96 60.74 49.96 53.8 49.96 52.94C49.96 51.74 49.11 50.76 48.06 50.76C47 50.76 46.15 51.74 46.15 52.94C46.15 53.8 46.15 60.74 46.15 61.6Z\",\n  id: \"cn0dDwaT3\"\n}), React.createElement(\"path\", {\n  d: \"M46.15 61.6C46.15 62.8 47 63.76 48.06 63.76C49.11 63.76 49.96 62.8 49.96 61.6C49.96 60.74 49.96 53.8 49.96 52.94C49.96 51.74 49.11 50.76 48.06 50.76C47 50.76 46.15 51.74 46.15 52.94C46.15 53.8 46.15 60.74 46.15 61.6Z\",\n  id: \"aZjv9ya7J\"\n}), React.createElement(\"path\", {\n  d: \"M46.15 44.26C46.15 45.46 47 46.44 48.06 46.44C49.11 46.44 49.96 45.46 49.96 44.26C49.96 43.4 49.96 36.46 49.96 35.6C49.96 34.4 49.11 33.44 48.06 33.44C47 33.44 46.15 34.4 46.15 35.6C46.15 36.46 46.15 43.4 46.15 44.26Z\",\n  id: \"cMnqRgj16\"\n}), React.createElement(\"path\", {\n  d: \"M46.15 44.26C46.15 45.46 47 46.44 48.06 46.44C49.11 46.44 49.96 45.46 49.96 44.26C49.96 43.4 49.96 36.46 49.96 35.6C49.96 34.4 49.11 33.44 48.06 33.44C47 33.44 46.15 34.4 46.15 35.6C46.15 36.46 46.15 43.4 46.15 44.26Z\",\n  id: \"b3z6nxOoOR\"\n}), React.createElement(\"path\", {\n  d: \"M46.15 26.94C46.15 28.14 47 29.1 48.06 29.1C49.11 29.1 49.96 28.14 49.96 26.94C49.96 26.06 49.96 19.14 49.96 18.26C49.96 17.08 49.11 16.1 48.06 16.1C47 16.1 46.15 17.08 46.15 18.26C46.15 19.14 46.15 26.06 46.15 26.94Z\",\n  id: \"atDCkGqk6\"\n}), React.createElement(\"path\", {\n  d: \"M46.15 26.94C46.15 28.14 47 29.1 48.06 29.1C49.11 29.1 49.96 28.14 49.96 26.94C49.96 26.06 49.96 19.14 49.96 18.26C49.96 17.08 49.11 16.1 48.06 16.1C47 16.1 46.15 17.08 46.15 18.26C46.15 19.14 46.15 26.06 46.15 26.94Z\",\n  id: \"g2H0y4pvAD\"\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#c640wI8z09\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 1\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#c640wI8z09\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#asKI9ZhvY\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#asKI9ZhvY\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#c3cijtHnvO\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 1\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#c3cijtHnvO\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#b1knx2YYkm\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#b1knx2YYkm\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#didD5clI\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 1\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#didD5clI\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#b2HAE14Bw\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#b2HAE14Bw\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#cn0dDwaT3\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 1\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#cn0dDwaT3\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#aZjv9ya7J\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#aZjv9ya7J\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#cMnqRgj16\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 1\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#cMnqRgj16\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#b3z6nxOoOR\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#b3z6nxOoOR\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#atDCkGqk6\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 1\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#atDCkGqk6\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#g2H0y4pvAD\",\n  opacity: 1,\n  fill: \"#000000\",\n  fillOpacity: 0\n}), React.createElement(\"g\", null, React.createElement(\"use\", {\n  xlinkHref: \"#g2H0y4pvAD\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n})))));\n\nvar SvgReflect = function SvgReflect(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"0 0 95.82 95.82\",\n    width: 95.82,\n    height: 95.82,\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgReflect, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/reflect.982b09a3.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from \"react\";\r\n// import { ReactComponent as Arrow } from \"./triangle.svg\";\r\n\r\nclass TransTable extends Component {\r\n    createTable = () => {\r\n        let table = [];\r\n        for (let i = 0; i < this.props.limitMove; i++) {\r\n            table.push(\r\n                <div className=\"box middle move\" key={\"move\" + i}></div>\r\n            );\r\n            table.push(<div className=\"box detail\" key={\"detail\" + i}></div>);\r\n        }\r\n        return table;\r\n    };\r\n\r\n    render() {\r\n        return <div className=\"eachRow\">{this.createTable()}</div>;\r\n    }\r\n}\r\n\r\nexport default TransTable;\r\n","import React, { Component } from \"react\";\r\nimport { ReactComponent as Arrow } from \"./triangle.svg\";\r\nimport OptionComp from \"./selectOpt.js\";\r\nimport { ReactComponent as RotateRight } from \"./redo.svg\";\r\nimport { ReactComponent as RotateLeft } from \"./undo.svg\";\r\nimport { ReactComponent as Reflect } from \"./reflect.svg\";\r\nimport TransTable from \"./TransTable\";\r\n\r\nclass TestMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.limitMove = 5;\r\n        this.nextAvailIndex = 0; //Next available index of transTable\r\n        this.commands = [];\r\n        this.state = {\r\n            hidden: true\r\n        };\r\n    }\r\n\r\n    timeout = ms => {\r\n        // console.log(\"timeout loop\");\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    };\r\n\r\n    sendInput = async e => {\r\n        for (const each of this.commands) {\r\n            if (each.command === \"idArrowUp\") this.props.moves(0, each.amount);\r\n            if (each.command === \"idArrowDown\")\r\n                this.props.moves(0, -each.amount);\r\n            if (each.command === \"idArrowLeft\")\r\n                this.props.moves(-each.amount, 0);\r\n            if (each.command === \"idArrowRight\")\r\n                this.props.moves(each.amount, 0);\r\n            if (each.command === \"idRotateRight\") this.props.rotates(90, 0, 0);\r\n            if (each.command === \"idRotateLeft\") this.props.rotates(-90, 0, 0);\r\n            if (each.command === \"idReflectY\") this.props.reflects(1, 0, 0);\r\n            if (each.command === \"idReflectX\") this.props.reflects(0, 1, 0);\r\n            await this.timeout(800);\r\n        }\r\n    };\r\n\r\n    addToTable = e => {\r\n        let command, detail;\r\n\r\n        if (e.target.id === \"\") return;\r\n\r\n        // if table is full\r\n        if (this.nextAvailIndex === this.limitMove)\r\n            return alert(\"The table hits maximum move\");\r\n\r\n        // if table still have row available\r\n        if (this.nextAvailIndex < this.limitMove) {\r\n            // store the command in array\r\n            this.commands.push({\r\n                command: e.target.id,\r\n                amount: Number(this.unitsMove.value)\r\n            });\r\n\r\n            detail = this.unitsMove.value + \" position(s)\";\r\n            if (e.target.id === \"idArrowUp\") command = \"Move Up\";\r\n            if (e.target.id === \"idArrowDown\") command = \"Move Down\";\r\n            if (e.target.id === \"idArrowLeft\") command = \"Move Left\";\r\n            if (e.target.id === \"idArrowRight\") command = \"Move Right\";\r\n\r\n            if (e.target.id === \"idRotateRight\") {\r\n                command = \"Rotate Right\";\r\n                detail = \"90 degrees\";\r\n            }\r\n\r\n            if (e.target.id === \"idRotateLeft\") {\r\n                command = \"Rotate Left\";\r\n                detail = \"90 degrees\";\r\n            }\r\n\r\n            if (e.target.id === \"idReflectY\") {\r\n                command = \"Reflection\";\r\n                detail = \"Y Axis\";\r\n            }\r\n\r\n            if (e.target.id === \"idReflectX\") {\r\n                command = \"Reflection\";\r\n                detail = \"X Axis\";\r\n            }\r\n\r\n            document.getElementsByClassName(\"move\")[\r\n                this.nextAvailIndex\r\n            ].textContent = command;\r\n            document.getElementsByClassName(\"detail\")[\r\n                this.nextAvailIndex\r\n            ].textContent = detail;\r\n\r\n            this.nextAvailIndex++;\r\n        }\r\n    };\r\n\r\n    toggleVisible = () => {\r\n        this.setState(prev => ({\r\n            hidden: !prev.hidden\r\n        }));\r\n    };\r\n\r\n    clearTable = () => {\r\n        for (let i = 0; i < this.limitMove; i++) {\r\n            document.getElementsByClassName(\"move\")[i].textContent = \"\";\r\n            document.getElementsByClassName(\"detail\")[i].textContent = \"\";\r\n        }\r\n\r\n        //reset variable\r\n        this.commands = [];\r\n        this.nextAvailIndex = 0;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            // <div id=\"sidebar\" className={this.props.hidden ? \"hidden\" : \"\"}>\r\n            <div id=\"sidebar\" className={this.state.hidden ? \"hidden\" : \"show\"}>\r\n                {/* display arrows, changed direction in ccs */}\r\n                <div className=\"icon-group\">\r\n                    <div className=\"icon-grid\">\r\n                        <RotateRight\r\n                            className=\"icon\"\r\n                            id=\"idRotateRight\"\r\n                            alt=\"Rotate Right\"\r\n                            // onClick={this.sendInput}\r\n                            onClick={this.addToTable}\r\n                        />\r\n                        <Arrow\r\n                            className=\"icon\"\r\n                            id=\"idArrowUp\"\r\n                            alt=\"Move Up\"\r\n                            onClick={this.addToTable}\r\n                        />\r\n                        <RotateLeft\r\n                            className=\"icon\"\r\n                            id=\"idRotateLeft\"\r\n                            alt=\"Rotate Left\"\r\n                            onClick={this.addToTable}\r\n                        />\r\n                    </div>\r\n                    <div className=\"icon-grid\">\r\n                        <Arrow\r\n                            className=\"icon\"\r\n                            id=\"idArrowLeft\"\r\n                            alt=\"Move Left\"\r\n                            onClick={this.addToTable}\r\n                        />\r\n                        <select\r\n                            className=\"custom-select custom-select-lg\"\r\n                            ref={input => {\r\n                                this.unitsMove = input;\r\n                            }}\r\n                        >\r\n                            <OptionComp />\r\n                        </select>\r\n                        <Arrow\r\n                            className=\"icon\"\r\n                            id=\"idArrowRight\"\r\n                            alt=\"Move Right\"\r\n                            onClick={this.addToTable}\r\n                        />\r\n                    </div>\r\n                    <div className=\"icon-grid\">\r\n                        <Reflect\r\n                            className=\"icon\"\r\n                            id=\"idReflectY\"\r\n                            alt=\"Reflect Y\"\r\n                            onClick={this.addToTable}\r\n                        />\r\n                        <Arrow\r\n                            className=\"icon\"\r\n                            id=\"idArrowDown\"\r\n                            alt=\"Move Down\"\r\n                            onClick={this.addToTable}\r\n                        />\r\n                        <Reflect\r\n                            className=\"icon\"\r\n                            id=\"idReflectX\"\r\n                            alt=\"Reflect X\"\r\n                            onClick={this.addToTable}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Transformation Sheet */}\r\n                <div className=\"transTable\">\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"button\">\r\n                            <button onClick={this.clearTable}>Clear</button>\r\n                            <button onClick={this.sendInput}>Play All</button>\r\n                        </div>\r\n                        <div className=\"header\">\r\n                            <div className=\"middle\">Move</div>\r\n                            <div className=\"middle\">Details</div>\r\n                        </div>\r\n                        <TransTable limitMove={this.limitMove} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TestMenu;\r\n","import _ from \"lodash\";\r\n\r\nexport default class Util {\r\n    static worldToLocal(coords) {\r\n        return coords.map((n, i) => {\r\n            if (i % 2 !== 0) n *= -1;\r\n            n -= 10;\r\n            return n;\r\n        });\r\n    }\r\n    static localToWorld(coords) {\r\n        return coords.map((n, i) => {\r\n            if (i % 2 !== 0) n *= -1;\r\n            n += 10;\r\n            return n;\r\n        });\r\n    }\r\n    static checkWin(playerCoords, goalCoords) {\r\n        if (playerCoords.length !== goalCoords.length) return false;\r\n\r\n        playerCoords = _.chunk(playerCoords, 2);\r\n        goalCoords = _.chunk(goalCoords, 2);\r\n\r\n        return _(playerCoords)\r\n            .differenceWith(goalCoords, _.isEqual)\r\n            .isEmpty();\r\n    }\r\n    // check to ensure player stays within the grid\r\n    static checkIfInGrid(coords, gridMax) {\r\n        return coords.every(i => Math.abs(i) <= gridMax);\r\n    }\r\n    // need to test thoroughly\r\n    static pointInTri(coords, px, py) {\r\n        const [x1, y1, x2, y2, x3, y3] = coords;\r\n        const origArea = Math.abs(\r\n            (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1)\r\n        );\r\n        const area1 = Math.abs((x1 - px) * (y2 - py) - (x2 - px) * (y1 - py));\r\n        const area2 = Math.abs((x2 - px) * (y3 - py) - (x3 - px) * (y2 - py));\r\n        const area3 = Math.abs((x3 - px) * (y1 - py) - (x1 - px) * (y3 - py));\r\n        return area1 + area2 + area3 === origArea;\r\n    }\r\n    static HORIZONTAL = \"horizontal\";\r\n    static VERTICAL = \"vertical\";\r\n}\r\n","import * as PIXI from \"pixi.js-legacy\";\r\nimport gsap from \"gsap\";\r\nimport Util from \"../logic/Util\";\r\n\r\nexport default class Triangle extends PIXI.Graphics {\r\n    constructor(x, y, boardSize, cellSize) {\r\n        super();\r\n        this.x = x;\r\n        this.y = y;\r\n        this.boardSize = boardSize;\r\n        this.cellSize = cellSize;\r\n        this.allowMove = true;\r\n        this.animateSpeed = 0.4;\r\n\r\n        // x1,y1,x2,y2,x3,y3\r\n        // change triangle size in this array\r\n        this.coords = [0, 2, 0, 0, 2, 0];\r\n    }\r\n    setCoordinates(newCoords, onComplete) {\r\n        if (!this.allowMove) return;\r\n        this.allowMove = false;\r\n        gsap.to(this.coords, {\r\n            0: newCoords[0],\r\n            1: newCoords[1],\r\n            2: newCoords[2],\r\n            3: newCoords[3],\r\n            4: newCoords[4],\r\n            5: newCoords[5],\r\n            duration: this.animateSpeed,\r\n            ease: \"bounce.out\",\r\n            onComplete: () => {\r\n                this.allowMove = true;\r\n                onComplete();\r\n            }\r\n        });\r\n    }\r\n    draw() {\r\n        let c = Util.localToWorld(this.coords);\r\n        const size = this.cellSize;\r\n        this.clear();\r\n        this.beginFill(0xee4444);\r\n        this.lineStyle(2);\r\n        this.moveTo(c[0] * size, c[1] * size);\r\n        this.lineTo(c[2] * size, c[3] * size);\r\n        this.lineTo(c[4] * size, c[5] * size);\r\n        this.closePath();\r\n        this.endFill();\r\n    }\r\n}\r\n","import * as PIXI from \"pixi.js-legacy\";\r\nimport gsap from \"gsap\";\r\n// import Message from \"./Message\";\r\n\r\nexport default class Transition extends PIXI.Graphics {\r\n    constructor(width, height) {\r\n        super();\r\n        this.width = width;\r\n        this.height = height;\r\n        this.x = -width - 80;\r\n        this.y = 0;\r\n        this.tris = 4;\r\n        this.triWidth = 80;\r\n        this.triHeight = height / this.tris;\r\n        this.time = 1;\r\n        this.delay = 0.4;\r\n\r\n        this.beginFill(0x000000);\r\n        this.drawRect(0, 0, width, height);\r\n\r\n        for (let i = 0; i < this.tris; i++) {\r\n            this.moveTo(width, i * this.triHeight);\r\n            this.lineTo(\r\n                width + this.triWidth,\r\n                this.triHeight * i + this.triHeight / 2\r\n            );\r\n            this.lineTo(width, this.triHeight * i + this.triHeight);\r\n        }\r\n        for (let i = 0; i < this.tris; i++) {\r\n            this.moveTo(0, i * this.triHeight);\r\n            this.lineTo(\r\n                -this.triWidth,\r\n                this.triHeight * i + this.triHeight / 2\r\n            );\r\n            this.lineTo(0, this.triHeight * i + this.triHeight);\r\n        }\r\n        this.closePath();\r\n        this.endFill();\r\n    }\r\n    transitionIn(callback = () => {}) {\r\n        this.x = 0;\r\n        gsap.to(this, {\r\n            x: this.width + this.triWidth,\r\n            duration: this.time,\r\n            delay: this.delay,\r\n            ease: \"quint-inout\",\r\n            onComplete: callback\r\n        });\r\n    }\r\n    transitionOut(callback = () => {}) {\r\n        this.x = -this.width - this.triWidth;\r\n        gsap.to(this, {\r\n            x: 0,\r\n            duration: this.time,\r\n            delay: this.delay,\r\n            ease: \"quint-inout\",\r\n            onComplete: callback\r\n        });\r\n    }\r\n}\r\n","import * as PIXI from \"pixi.js-legacy\";\r\nimport gsap from \"gsap\";\r\n\r\nexport default class Message extends PIXI.Graphics {\r\n    constructor(message, x, y, timeout, width, height) {\r\n        super();\r\n        this.x = x;\r\n        this.targetY = y;\r\n        this.y = y + 64;\r\n        this.w = width;\r\n        this.height = height;\r\n        this.animateSpeed = 0.3;\r\n        this.timeout = timeout;\r\n        this.style = new PIXI.TextStyle({\r\n            fontFamily: \"Arial\",\r\n            fontSize: 64,\r\n            fontStyle: \"italic\",\r\n            fontWeight: \"bold\",\r\n            fill: [\"#ffffff\", \"#ff9922\"], // gradient\r\n            stroke: \"#4a1850\",\r\n            strokeThickness: 5,\r\n            dropShadow: true,\r\n            dropShadowColor: \"#000000\",\r\n            dropShadowBlur: 4,\r\n            dropShadowAngle: Math.PI / 6,\r\n            dropShadowDistance: 6,\r\n            wordWrap: false,\r\n            wordWrapWidth: 440\r\n        });\r\n        this.text = new PIXI.Text(message, this.style);\r\n        this.addChild(this.text);\r\n    }\r\n    setText(message) {\r\n        this.text.text = message;\r\n        this.x = this.w / 2 - this.text.width / 2;\r\n        gsap.to(this, {\r\n            y: 50,\r\n            duration: this.animateSpeed,\r\n            delay: 0.3,\r\n            ease: \"bounce.out\",\r\n            onComplete: () => {}\r\n        });\r\n        setTimeout(() => {\r\n            this.text.text = \"\";\r\n            this.y += 64;\r\n        }, this.timeout);\r\n    }\r\n}\r\n","import * as PIXI from \"pixi.js-legacy\";\r\n\r\nexport default class Grid extends PIXI.Graphics {\r\n    constructor(x, y, width, height) {\r\n        super();\r\n        this.clear();\r\n        this.beginFill(0xffffff, 0.5);\r\n        this.drawRect(x, y, width, height);\r\n        this.endFill();\r\n\r\n        this.lineStyle(2, 0x222222, 1);\r\n        let count = 0;\r\n\r\n        for (let index = 0; index <= width; index += width / 20) {\r\n            count === 10\r\n                ? this.lineStyle(2, 0xee22ee, 1)\r\n                : this.lineStyle(2, 0x222222, 1);\r\n            this.moveTo(index + x, y);\r\n            this.lineTo(index + x, height + y);\r\n            count++;\r\n        }\r\n        count = 0;\r\n        for (let index = 0; index <= height; index += height / 20) {\r\n            count === 10\r\n                ? this.lineStyle(2, 0xee22ee, 1)\r\n                : this.lineStyle(2, 0x222222, 1);\r\n            this.moveTo(x, y + index);\r\n            this.lineTo(width + x, index + y);\r\n            count++;\r\n        }\r\n    }\r\n}\r\n","import * as PIXI from \"pixi.js-legacy\";\r\n\r\nexport default class GridNumbers extends PIXI.Container {\r\n    constructor(centreX, centreY, cellSize) {\r\n        super();\r\n\r\n        const offset = 10;\r\n        const visOffset = 20;\r\n\r\n        let numbers = [];\r\n        // horizontal numbers\r\n        for (let i = 0; i <= 20; i += 2) {\r\n            // to skip drawing zero twice\r\n            if (i === 10) continue;\r\n            let t = new PIXI.Text(i - offset, {\r\n                fontSize: 13,\r\n                fill: 0x101010,\r\n                align: \"center\"\r\n            });\r\n            t.resolution = 5;\r\n            this.addChild(t);\r\n            t.x = i * cellSize + visOffset + 1 / 2;\r\n            t.y = centreY;\r\n            numbers.push(t);\r\n            var bubble = new PIXI.Graphics();\r\n            bubble.beginFill(0xee22ee); // sets color\r\n            bubble.drawCircle(t.x - 5, t.y + 16, 4); // drawCircle(x, y, radius)\r\n            bubble.endFill();\r\n            this.addChild(bubble);\r\n        }\r\n        //vertical number\r\n        for (let i = 0; i <= 20; i += 2) {\r\n            // if (i === 10) continue;\r\n            let t = new PIXI.Text(20 - i - offset, {\r\n                fontSize: 13,\r\n                fill: 0x101010,\r\n                align: \"center\"\r\n            });\r\n            t.resolution = 5;\r\n            this.addChild(t);\r\n            t.x = centreX + visOffset;\r\n            t.y = i * cellSize - visOffset / 8;\r\n            numbers.push(t);\r\n            bubble = new PIXI.Graphics();\r\n            bubble.beginFill(0xee22ee); // sets color\r\n            bubble.drawCircle(t.x - 5, t.y + 19, 4); // drawCircle(x, y, radius)\r\n            bubble.endFill();\r\n            this.addChild(bubble);\r\n        }\r\n\r\n        this.cacheAsBitmap = true;\r\n    }\r\n}\r\n","import * as PIXI from \"pixi.js-legacy\";\r\nimport Util from \"../logic/Util\";\r\n\r\nexport default class Goal extends PIXI.Graphics {\r\n    constructor(coords, cellSize) {\r\n        super();\r\n        this.x += 16;\r\n        this.y += 16;\r\n        this.coords = coords;\r\n        this.cellSize = cellSize;\r\n        this.draw();\r\n    }\r\n    setCoords(coords) {\r\n        this.coords = coords;\r\n        this.draw();\r\n    }\r\n    draw() {\r\n        let c = Util.localToWorld(this.coords);\r\n        const size = this.cellSize;\r\n        this.clear();\r\n        this.beginFill(0x666666);\r\n        this.lineStyle(2);\r\n        this.moveTo(c[0] * size, c[1] * size);\r\n        this.lineTo(c[2] * size, c[3] * size);\r\n        this.lineTo(c[4] * size, c[5] * size);\r\n        this.closePath();\r\n        this.endFill();\r\n    }\r\n}\r\n","export default class Transforms {\r\n    static translate(coords, dx, dy) {\r\n        coords = coords.concat();\r\n        for (let i = 0; i < coords.length; i += 2) {\r\n            coords[i] += dx;\r\n            coords[i + 1] += dy;\r\n        }\r\n        return coords;\r\n    }\r\n    static rotate(coords, angle, originX, originY) {\r\n        angle *= Math.PI / 180;\r\n        const angleSin = Math.sin(angle);\r\n        const angleCos = Math.cos(angle);\r\n        let copy = coords.concat();\r\n        let newCoords = [];\r\n        for (let i = 0; i < coords.length; i += 2) {\r\n            newCoords[i] = Math.round(\r\n                (copy[i] - originX) * angleCos +\r\n                    (copy[i + 1] - originY) * angleSin +\r\n                    originX\r\n            );\r\n            newCoords[i + 1] = Math.round(\r\n                (copy[i + 1] - originY) * angleCos -\r\n                    (copy[i] - originX) * angleSin +\r\n                    originY\r\n            );\r\n        }\r\n        return newCoords;\r\n    }\r\n    // https://math.stackexchange.com/questions/1013230/how-to-find-coordinates-of-reflected-point\r\n    // for reflect over line ax+by=c\r\n    static reflect(coords, a, b, c) {\r\n        coords = coords.concat();\r\n        let newCoords = [];\r\n        const aSq = a * a;\r\n        const bSq = b * b;\r\n        for (let i = 0; i < coords.length; i += 2) {\r\n            newCoords[i] =\r\n                ((bSq - aSq) * coords[i] -\r\n                    2 * a * b * coords[i + 1] -\r\n                    2 * a * c) /\r\n                (aSq + bSq);\r\n            newCoords[i + 1] =\r\n                ((aSq - bSq) * coords[i + 1] -\r\n                    2 * a * b * coords[i] -\r\n                    2 * b * c) /\r\n                (aSq + bSq);\r\n        }\r\n        return newCoords;\r\n    }\r\n    static HORIZONTAL = \"HORIZONTAL\";\r\n    static VERTICAL = \"VERTICAL\";\r\n}\r\n","\r\nimport * as PIXI from \"pixi.js-legacy\";\r\nimport sparkles from \"../resources/sparkles.svg\";\r\n\r\nexport default class CreateStars extends PIXI.Sprite {\r\n    constructor(x, y, size, offset) {\r\n        super();\r\n        let star = new PIXI.Sprite.from(sparkles);\r\n        star.scale = new PIXI.Point(size, size);\r\n        this.delta = 0;\r\n        this.offset = offset;\r\n        star.position.set(x, y);\r\n        this.addChild(star);\r\n    }\r\n\r\n    animateStars() {\r\n        this.delta += 0.05;\r\n        this.alpha = Math.sin(this.delta/2)+1+ this.offset; //OPACITY\r\n    }\r\n}\r\n\r\n","import * as PIXI from \"pixi.js-legacy\";\r\n\r\nexport default class Conffeti extends PIXI.Container {\r\n    constructor() {\r\n        super();\r\n        this.delta = 0;\r\n        this.ticks = 8;\r\n        this.amount = 100;\r\n        for (let i = 0; i < this.amount; i++) {\r\n            this.addChild(this.createPiece());\r\n        }\r\n    }\r\n    createPiece() {\r\n        let bubble = new PIXI.Graphics();\r\n        let width = 1024;\r\n        let height = 576;\r\n        let x = Math.random() * width;\r\n        let y = Math.random() * height;\r\n        let radius = 5;\r\n        bubble.beginFill(Math.random() * 0xffffff); // sets color\r\n        bubble.drawCircle(x, y, radius);\r\n        bubble.endFill();\r\n        this.addChild(bubble);\r\n        return bubble;\r\n    }\r\n\r\n    animateConfetti() {\r\n        this.delta += 0.05;\r\n        this.ticks--;\r\n        for (let i of this.children) {\r\n            let rand = Math.round(Math.random());\r\n            i.y += this.ticks > 0 ? -2 : 4;\r\n            i.x += rand + rand - 1;\r\n        }\r\n    }\r\n}\r\n","import * as PIXI from \"pixi.js-legacy\";\r\nimport Triangle from \"./Triangle\";\r\nimport Transition from \"./Transition\";\r\nimport Message from \"./Message\";\r\nimport Grid from \"./Grid\";\r\nimport GridNumbers from \"./GridNumbers\";\r\nimport Goal from \"./Goal\";\r\nimport Util from \"../logic/Util\";\r\nimport Transforms from \"../logic/Transforms\";\r\nimport levels from \"../logic/levels.json\";\r\nimport bg1 from \"../resources/bg1.png\";\r\nimport CreateStars from \"./BgAnimation\";\r\nimport Conffeti from \"./Conffeti\";\r\n\r\nexport default class Game {\r\n    constructor(app, props) {\r\n        this.app = app;\r\n        this.entities = [];\r\n        this.tri = undefined;\r\n        this.goal = undefined;\r\n        this.message = undefined;\r\n        this.allowMove = true; // reset when move turn ends\r\n        this.allowInput = false; // only reset on level reset\r\n        this.transition = new Transition(1024, 576);\r\n        this.currentLevel = 1;\r\n        this.conffeti = undefined;\r\n        this.star1 = undefined;\r\n        this.star2 = undefined;\r\n        this.star3 = undefined;\r\n    }\r\n    start() {\r\n        const root = new PIXI.Container();\r\n        const bg = PIXI.Sprite.from(bg1);\r\n        bg.zIndex = -1;\r\n        bg.scale = new PIXI.Point(1.2, 1.2);\r\n\r\n        root.addChild(bg);\r\n\r\n        this.star1 = new CreateStars(600, 50, 0.4, 0.5);\r\n        root.addChild(this.star1);\r\n        this.star2 = new CreateStars(15, 150, 0.2, 0.4);\r\n        root.addChild(this.star2);\r\n        this.star3 = new CreateStars(970, 170, 0.2, 0);\r\n        root.addChild(this.star3);\r\n\r\n        const container = new PIXI.Container();\r\n        root.addChild(container);\r\n        this.app.stage.addChild(root);\r\n\r\n        let totalGridSize = 500;\r\n        let cellSize = totalGridSize / 20;\r\n        let grid = new Grid(16, 16, totalGridSize, totalGridSize);\r\n\r\n        container.addChild(grid);\r\n        let gridNums = new GridNumbers(\r\n            totalGridSize / 2,\r\n            totalGridSize / 2,\r\n            cellSize\r\n        );\r\n\r\n        this.tri = new Triangle(16, 16, totalGridSize, cellSize);\r\n        container.addChild(gridNums);\r\n\r\n        this.goal = new Goal([3, 5, 3, 3, 5, 3], cellSize);\r\n        container.addChild(this.goal);\r\n        container.addChild(this.tri);\r\n\r\n        this.app.stage.addChild(this.transition);\r\n\r\n        // Move container to the center\r\n        container.x = this.app.screen.width / 3;\r\n        container.y = this.app.screen.height / 2;\r\n\r\n        // Center sprite in local container coordinates\r\n        container.pivot.x = container.width / 2;\r\n        container.pivot.y = container.height / 2;\r\n\r\n        this.message = new Message(\r\n            \"\",\r\n            this.app.screen.width / 2 - 80,\r\n            this.app.screen.height / 2,\r\n            2000,\r\n            this.app.screen.width,\r\n            this.app.screen.height\r\n        );\r\n        this.app.stage.addChild(this.message);\r\n\r\n        this.loadLevel(1);\r\n\r\n        // Listen for animate update\r\n        this.app.ticker.add(delta => {\r\n            if (this.tri) {\r\n                this.tri.draw();\r\n            }\r\n            if (this.star1 && this.star2) {\r\n                this.star1.animateStars();\r\n                this.star2.animateStars();\r\n            }\r\n            if (this.conffeti) {\r\n                this.conffeti.animateConfetti();\r\n            }\r\n        });\r\n    }\r\n    translate(dx, dy) {\r\n        if (!this.allowMove || !this.allowInput) return;\r\n        this.allowMove = false;\r\n        const t = Transforms.translate(this.tri.coords, dx, dy);\r\n        this.tri.setCoordinates(t, this.onMoveComplete);\r\n    }\r\n    rotate(a, oX, oY) {\r\n        if (!this.allowMove || !this.allowInput) return;\r\n        this.allowMove = false;\r\n        const t = Transforms.rotate(this.tri.coords, a, oX, oY);\r\n        this.tri.setCoordinates(t, this.onMoveComplete);\r\n    }\r\n    reflect(a, b, c) {\r\n        if (!this.allowMove || !this.allowInput) return;\r\n        this.allowMove = false;\r\n        const t = Transforms.reflect(this.tri.coords, a, b, c);\r\n        this.tri.setCoordinates(t, this.onMoveComplete);\r\n    }\r\n    loadLevel(levelIndex, json) {\r\n        this.transition.transitionOut(() => {\r\n            this.tri.coords = levels[levelIndex][\"playerCoords\"].concat();\r\n            this.goal.setCoords(levels[levelIndex][\"goalCoords\"].concat());\r\n            this.transition.transitionIn(() => {\r\n                this.allowMove = true;\r\n                this.allowInput = true;\r\n                this.toggleUI();\r\n            });\r\n        });\r\n    }\r\n    onMoveComplete = () => {\r\n        if (!Util.checkIfInGrid(this.tri.coords, 10)) {\r\n            // went outside the grid\r\n            this.allowMove = false;\r\n            this.allowInput = false;\r\n            this.message.setText(\"Went outside grid!\");\r\n            this.loadLevel(this.currentLevel, levels);\r\n            this.toggleUI();\r\n        }\r\n\r\n        for (let i in this.entities) {\r\n            if (Util.pointInTri(this.tri.coords, i.x, i.y)) {\r\n            }\r\n        }\r\n        if (Util.checkWin(this.tri.coords, this.goal.coords)) {\r\n            this.levelComplete();\r\n        } else {\r\n            this.allowMove = true;\r\n        }\r\n    };\r\n    levelComplete() {\r\n        this.message.setText(\"You Win!\");\r\n\r\n        // const container = new PIXI.Container();\r\n        // this.app.stage.addChild(container);\r\n        this.conffeti = new Conffeti();\r\n        this.app.stage.addChild(this.conffeti);\r\n        // for (let i = 0; i < 200; i++) {\r\n        //     container.addChild(conffeti.createConffeti());\r\n        // }\r\n\r\n        this.allowMove = false;\r\n        this.allowInput = false;\r\n        if (this.currentLevel >= 3) {\r\n            this.currentLevel = 1;\r\n        } else {\r\n            this.currentLevel++;\r\n        }\r\n        this.resetTable();\r\n        this.toggleUI();\r\n        this.loadLevel(this.currentLevel);\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as PIXI from \"pixi.js-legacy\";\r\nimport TestMenu from \"./components/ui/TestMenu\";\r\nimport Game from \"./pixi/Game\";\r\nimport \"./App.css\";\r\nimport \"./TransTable.css\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvasRef = React.createRef();\r\n        this.UIRef = React.createRef();\r\n        this.canvas = this.canvasRef.current;\r\n        this.app = undefined;\r\n        this.game = undefined;\r\n        this.width = 1024;\r\n        this.height = 576;\r\n        this.state = {};\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.canvas = this.canvasRef.current;\r\n            this.app = new PIXI.Application({\r\n                width: this.width,\r\n                height: this.height,\r\n                backgroundColor: 0x1099bb,\r\n                view: this.canvas,\r\n                resolution: window.devicePixelRatio || 1\r\n            });\r\n            this.game = new Game(this.app);\r\n            this.game.resetTable = this.sendResetTableMsg;\r\n            this.game.toggleUI = this.toggleUIVisible;\r\n            this.game.start();\r\n        }, 5);\r\n    }\r\n    move = (x, y) => {\r\n        this.game.translate(x, y);\r\n    };\r\n    rotate = (a, oX, oY) => {\r\n        this.game.rotate(a, oX, oY);\r\n    };\r\n    reflect = (a, b, c) => {\r\n        this.game.reflect(a, b, c);\r\n    };\r\n    sendResetTableMsg = () => {\r\n        this.UIRef.current.clearTable();\r\n    };\r\n    toggleUIVisible = () => {\r\n        this.UIRef.current.toggleVisible();\r\n    };\r\n    render() {\r\n        return (\r\n            <div id=\"app-container\">\r\n                <div id=\"game-container\">\r\n                    <canvas ref={this.canvasRef} />\r\n                    <TestMenu\r\n                        ref={this.UIRef}\r\n                        hidden={false}\r\n                        moves={this.move}\r\n                        rotates={this.rotate}\r\n                        reflects={this.reflect}\r\n                        resetTable={this.resetTable}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}